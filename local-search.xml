<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>k8s</title>
    <link href="/2023/11/18/k8s/"/>
    <url>/2023/11/18/k8s/</url>
    
    <content type="html"><![CDATA[<h1>K8s</h1><blockquote><p>本文章用作个人记录备忘，可能会有不完善的地方</p></blockquote><h2 id="配置">配置</h2><blockquote><p>参考:</p><ul><li><a href="https://v1-27.docs.kubernetes.io/zh-cn/docs/tasks/tools/install-kubectl-linux/">在 Linux 系统中安装并设置 kubectl | Kubernetes</a></li><li><a href="https://blog.csdn.net/weixin_58648684/article/details/130699568">Ubuntu22 k8s 1.27.1 安装及集群搭建教学（2023.5.16 k8s 最新版本教学，只看这一篇就够了哦！保姆级教程！不行你来找我！）_缘昔的博客-CSDN博客</a></li></ul></blockquote><h3 id="1-虚拟机">1. 虚拟机</h3><p>使用两台22.04 LTS的ubuntu server虚拟机</p><ul><li>镜像：<a href="https://ubuntu.com/download/server#downloads">Get Ubuntu Server | Download | Ubuntu</a></li><li>安装参考：<a href="https://www.cnblogs.com/mefj/p/14964416.html">Ubuntu 20.04 live server版安装(详细版) - 运维密码 - 博客园 (cnblogs.com)</a><ul><li><a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu">https://mirrors.tuna.tsinghua.edu.cn/ubuntu</a></li></ul></li></ul><p>虚拟机配置</p><ul><li>以下三个配置在不同主机应该不同<ul><li>ip：192.168.139.131，基于22端口进行ssh连接</li><li>mac：00:0c:29:68:c9:29</li><li>product_uuid：d39c4d56-ecf6-5683-efe9-4b22f968c929</li></ul></li></ul><h3 id="2-安装docker、容器运行时、k8s">2. 安装docker、容器运行时、k8s</h3><h4 id="（1）docker">（1）docker</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">安装并配置docker</span><br>curl -fsSL https://test.docker.com -o test-docker.sh<br>sudo sh test-docker.sh<br>sudo gpasswd -a $USER docker<br>newgrp docker<br><br>sudo vim /etc/docker/daemon.json# 见下面<br>systemctl daemon-reload<br>systemctl restart docker<br></code></pre></td></tr></table></figure><p>daemon.json可以修改为如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;registry-mirrors&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-string">&quot;https://jkfdsf2u.mirror.aliyuncs.com&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;https://registry.docker-cn.com&quot;</span><br>  <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;exec-opts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;native.cgroupdriver=systemd&quot;</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h4 id="（2）容器运行时">（2）容器运行时</h4><p>1.24以下版本的k8s可以忽略这一部分</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat &lt;&lt;EOF | sudo tee /etc/modules-load.d/k8s.conf<br>overlay<br>br_netfilter<br>EOF<br><br>sudo modprobe overlay<br>sudo modprobe br_netfilter<br><br>cat &lt;&lt;EOF | sudo tee /etc/sysctl.d/k8s.conf<br>net.bridge.bridge-nf-call-iptables  = 1<br>net.bridge.bridge-nf-call-ip6tables = 1<br>net.ipv4.ip_forward                 = 1<br>EOF<br><br>sudo sysctl --system<br><br>lsmod | grep br_netfilter<br>lsmod | grep overlay<br><br>sysctl net.bridge.bridge-nf-call-iptables net.bridge.bridge-nf-call-ip6tables net.ipv4.ip_forward<br><br><br>sudo apt install -y curl gnupg2 software-properties-common apt-transport-https ca-certificates<br>sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmour -o /etc/apt/trusted.gpg.d/docker.gpg<br>sudo add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot;<br><br>sudo apt update<br>sudo apt install -y containerd.io<br><br>containerd config default | sudo tee /etc/containerd/config.toml &gt;/dev/null 2&gt;&amp;1<br>sudo sed -i &#x27;s/SystemdCgroup \= false/SystemdCgroup \= true/g&#x27; /etc/containerd/config.toml<br>sudo systemctl restart containerd<br>sudo systemctl enable containerd<br><br></code></pre></td></tr></table></figure><h4 id="（3）安装k8s">（3）安装k8s</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">安装kubelet</span><br>sudo swapoff -a# 关闭交换区<br>sudo vim /etc/fstab# 注释 /swap，永久关闭交换区<br>sudo apt-get update<br>sudo apt-get install -y apt-transport-https ca-certificates curl<br>curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-archive-keyring.gpg<br>echo &quot;deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main&quot; | sudo tee /etc/apt/sources.list.d/kubernetes.list<br><br>sudo apt-get update<br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看可安装版本</span><br>apt-cache madison kubelet<br><br>sudo apt-get install -y kubelet=1.23.17-00 kubeadm=1.23.17-00 kubectl=1.23.17-00<br>sudo apt-mark hold kubelet kubeadm kubectl# 保持当前版本<br>su<br>sudo passwd root# 设置root密码，第一次使用su命令是需要<br>su<br></code></pre></td></tr></table></figure><h2 id="运行">运行</h2><h3 id="1-启动及准备工作">1. 启动及准备工作</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">容器运行时，1.24及以上版本可能要注意</span><br>sudo rm /etc/containerd/config.toml<br><span class="hljs-meta prompt_"># </span><span class="language-bash">生成 containerd 的默认配置文件</span><br>containerd config default &gt; /etc/containerd/config.toml <br><span class="hljs-meta prompt_"># </span><span class="language-bash">统一换源操作</span><br>sed -i &quot;s#registry.k8s.io/pause#registry.aliyuncs.com/google_containers/pause#g&quot; /etc/containerd/config.toml<br><span class="hljs-meta prompt_"># </span><span class="language-bash">重新加载配置文件</span><br>systemctl daemon-reload <br><span class="hljs-meta prompt_"># </span><span class="language-bash">重启所有有关6443端口的服务</span> <br>systemctl restart containerd.service <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">1.24以下版本，从这里开始</span><br>systemctl restart docker<br>systemctl restart kubelet<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">启动</span><br>sudo kubeadm init \<br>--image-repository registry.aliyuncs.com/google_containers  \<br>--apiserver-advertise-address=192.168.139.134 \<br> --v=6 --pod-network-cidr=10.244.0.0/16<br><span class="hljs-meta prompt_"># </span><span class="language-bash">sudo kubeadm init --image-repository registry.aliyuncs.com/google_containers  --apiserver-advertise-address=192.168.1.104  --v=6 --pod-network-cidr=10.244.0.0/16</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">记得复制类似以下命令，方便加入节点</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">kubeadm <span class="hljs-built_in">join</span> 192.168.139.131:6443 --token 0mr7mn.mo88cy54sbi9hv73         --discovery-token-ca-cert-hash sha256:5ba9db40e62e67f88fe58bb03130f033cbb81e3f704c1ec89525dd66a49febf8</span><br><br></code></pre></td></tr></table></figure><p>各个节点都需要，只不过工作节点是复制主结点的。不然会报错：localhost:8080 was refused</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">1. 创建文件夹</span><br>mkdir -p $HOME/.kube<br><span class="hljs-meta prompt_"># </span><span class="language-bash">2.1 主节点</span><br>sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config<br><span class="hljs-meta prompt_"># </span><span class="language-bash">2.2 从节点</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">sudo scp /home/node1/.kube/config node3@192.168.139.133:/home/node3/.kube/</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">sudo scp /home/jxlai/.kube/config jxlai@192.168.1.107:/home/jxlai/.kube/</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;123456&#x27;</span> | sudo scp /home/node1/.kube/config node2@192.168.139.132:/home/node2/.kube/</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">3. 授予权限</span><br>sudo chown $(id -u):$(id -g) $HOME/.kube/config<br>export KUBECONFIG=$HOME/.kube/config<br><span class="hljs-meta prompt_"># </span><span class="language-bash">4. 跨主机通信</span><br>wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml<br>kubectl apply -f kube-flannel.yml<br><span class="hljs-meta prompt_"># </span><span class="language-bash">或</span><br>kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml<br><span class="hljs-meta prompt_"># </span><span class="language-bash">5. 设置网络</span><br><br></code></pre></td></tr></table></figure><h3 id="2-加入从节点">2. 加入从节点</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo kubeadm join 192.168.139.134:6443 --token wu1gxi.e368u8niv19lyjnc  \<br>        --discovery-token-ca-cert-hash sha256:f364ff33facc186f213addc4901fa66d7fa994cb614cc6e8943652f5726df871<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看token</span><br>kubeadm token list<br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看discovery-token-ca-cert-hash</span><br>openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2&gt;/dev/null | openssl dgst -sha256 -hex | sed &#x27;s/^.* //&#x27;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">隔太久时必须重新生成token</span><br>kubeadm token create --ttl 0 --print-join-command<br></code></pre></td></tr></table></figure><h3 id="3-重置">3. 重置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo y | sudo kubeadm reset # --cert-dir string<br><span class="hljs-meta prompt_"># </span><span class="language-bash">sudo <span class="hljs-built_in">rm</span> -rf /etc/cni/net.d</span><br>sudo rm -r ~/.kube<br>mkdir -p $HOME/.kube<br></code></pre></td></tr></table></figure><h3 id="4-其它">4. 其它</h3><ul><li>查看日志：<code>journalctl -xeu kubelet</code></li><li>查看pod：<code>kubectl get pod -n kube-system</code></li><li>查看node：<code>kubectl get nodes</code></li><li>查看端口：<code>ss -lntu</code></li></ul><h3 id="5-可能遇到的问题">5. 可能遇到的问题</h3><ul><li><p><a href="https://blog.csdn.net/qq_34857250/article/details/82562514?spm=1001.2101.3001.6650.7&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-7-82562514-blog-124097390.235%5Ev38%5Epc_relevant_default_base&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-7-82562514-blog-124097390.235%5Ev38%5Epc_relevant_default_base&amp;utm_relevant_index=8">k8s 集群部署问题整理-CSDN博客</a></p></li><li><p>从节点加入时卡在：[preflight] Running pre-flight checks</p><ul><li>可能是时区不一致</li><li>也可能是需要重新生成token<ul><li><code>kubeadm token create --ttl 0 --print-join-command</code></li></ul></li></ul></li><li><p>su无效：</p><ul><li>运行<code>sudo passwd root</code>重新设置一下密码即可</li></ul></li><li><p>coredns-6d8c4cb4d-99g8n一直没建好</p><ul><li><p>有容器为evict：</p><ul><li>资源利用率超过85%。（可用 df -h 看一下磁盘占用率）</li></ul></li><li><p>“/run/flannel/subnet.env: no such file or directory“：</p><ul><li>启动时没设置 <code>--pod-network-cidr=10.244.0.0/16</code></li><li>注意上面指定的网段不要跟自己真实的内网网段产生冲突，否则会造成机器之间无法ping通的问题</li></ul></li></ul></li><li><p>failed to find plugin “xxx“ in path [/opt/cni/bin]]</p><ul><li>在https://<a href="https://so.csdn.net/so/search?q=github&amp;spm=1001.2101.3001.7020">github</a>.com/containernetworking/plugins/releases里面找到对应的版本，下载后解压到/opt/cni/bin之后重启kubectl即可（版本好像不能超过1）</li><li>我是两台机器，一台正常，一台报上述错误，将一台/opt/cni/bin下的文件复制到另一台就好了</li></ul></li><li><p>一直循环unhealth</p><p>短时间内一直循环是正常的，太久的话可能是如下问题</p><ul><li><p>cgroup不一致或端口没开放</p></li><li><p>第一次使用时出现：“Failed to run kubelet” err=“failed to run Kubelet: misconfiguration: kubelet cgroup driver: “cgroupfs” is different from docker cgroup driver: “systemd””</p><ul><li>如果已经确认cgroup对应上了，则根据[完全卸载ubuntu上的k8s - CSDN文库](<a href="https://wenku.csdn.net/answer/trsjf3ftv4#:~:text=%E5%AE%8C%E5%85%A8%E5%8D%B8%E8%BD%BDubuntu%E4%B8%8A%E7%9A%84k8s">https://wenku.csdn.net/answer/trsjf3ftv4#:~:text=完全卸载ubuntu上的k8s</a> 1 停止 Kubernetes 服务： sudo systemctl stop,6 删除相关的配置目录和文件： … 7 清理 iptables 规则： )卸载k8s后，重新下载就行了（其实都没有卸载干净，因为下载时一下就完成了，可能是purge命令将某些配置文件删干净了）</li></ul></li><li><p>交换区没关导致，kubelet服务没启动（sudo vim /etc/fstab# ubuntu22.04貌似注释了没用）</p><ul><li>sudo swapoff -a</li></ul></li></ul></li><li><p><a href="https://blog.csdn.net/Canger_/article/details/128812589">k8s遇 The connection to the server :6443 was refused_6443端口-CSDN博客</a></p><ul><li><p>可能是硬件与系统时间不一致（个人认为，这种情况可能性较小，下述仅作记录）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell">date                                                               #确认系统时间<br>hwclock                                                            #确认硬件<br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果此时系统时间和硬件时间同步，但明显不是服务器重启之前的时间。请继续往下看。否则就不是本情况，请查看其他案例。</span><br><br>date -s &quot;2022-12-08 12:00:00&quot;                                      #首先进行系统时间的修改，此处为举例：系统时间修改为2022年12月8日 中午12点整<br>hwclock --hctosys                                                  #然后用硬件时钟同步系统时钟<br>timedatectl |awk -F&quot;:&quot; &#x27;/synchronized/&#123;print $2&#125;&#x27;                  #检查ntp时间同步是否就绪，一般等待20-30分钟左右后会显示yes<br>kubectl get node                                                   #检查是否还会报错  <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">5、时间同步</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看时区，时间</span><br>date<br><span class="hljs-meta prompt_">#</span><span class="language-bash">先查看时区是否正常，不正确则替换为上海时区</span><br>timedatectl set-timezone Asia/Shanghai<br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装ntpdate，联网同步时间</span><br>sudo apt-get install ntpdate<br>sudo export PATH=$PATH:/sbin:/usr/sbin<br>sudo ntpdate cn.pool.ntp.org<br><span class="hljs-meta prompt_"># </span><span class="language-bash">或者手动调整</span><br>date -s &quot;2022-12-08 12:00:00&quot;  <br><span class="hljs-meta prompt_"># </span><span class="language-bash">系统时间和硬件时间同步</span><br>hwclock --hctosys <br><br></code></pre></td></tr></table></figure></li></ul></li></ul><h2 id="卸载">卸载</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl stop kubelet<br>systemctl stop etcd<br>systemctl stop docker<br>kubeadm reset -f<br>modprobe -r ipip<br>lsmod<br>rm -rf /home/node1/.kube/# 注意更改<br>rm -rf /etc/kubernetes/<br>rm -rf /etc/systemd/system/kubelet.service.d<br>rm -rf /etc/systemd/system/kubelet.service<br>rm -rf /usr/bin/kube*<br>rm -rf /etc/cni<br>rm -rf /opt/cni<br>rm -rf /var/lib/etcd<br>rm -rf /var/etcd<br>sudo apt-mark unhold kubelet kubeadm kubectl<br>sudo apt-get purge kubelet kubeadm kubectl<br><br></code></pre></td></tr></table></figure><ul><li><a href="https://blog.csdn.net/weixin_39589455/article/details/129160682">最纯净-Ubuntu系统下如何卸载kubernetes(k8s)-2023最新_ubuntu卸载k8s-CSDN博客</a></li><li>卸载k8s：<a href="https://blog.csdn.net/LONG_Yi_1994/article/details/127139637">https://blog.csdn.net/LONG_Yi_1994/article/details/127139637</a></li><li><a href="https://wenku.csdn.net/answer/trsjf3ftv4#:~:text=%E5%AE%8C%E5%85%A8%E5%8D%B8%E8%BD%BDubuntu%E4%B8%8A%E7%9A%84k8s">完全卸载ubuntu上的k8s - CSDN文库</a></li></ul><h2 id="虚拟机克隆">虚拟机克隆</h2><blockquote><p>基于VMware克隆Ubuntu22.04虚拟机</p></blockquote><ol><li><p>右键虚拟机-管理-克隆</p></li><li><p>选择选项后克隆</p></li><li><p>解决mac地址一样的问题：虚拟机设置-网络适配器-高级-生成</p></li><li><p>解决ip地址一样的问题（ubuntu）：<code>sudo vim /etc/netplan/00-installer-config.yaml</code>，设置对应网卡</p><ol><li><pre><code class="language-yaml"># This is the network config written by 'subiquity'network:  version: 2  ethernets:    ens33:      dhcp4: no      addresses: [192.168.139.135/24]      routes:        - to: default          via: 192.168.139.2# 网关务必设置好，我就是这里浪费了大量时间      nameservers:        addresses:          - 8.8.8.8          - 114.114.114.114<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs awk"><br>   <span class="hljs-number">2</span>. `sudo netplan apply`<br><br><span class="hljs-number">5</span>. 修改主机名<br><br>   - `sudo vim <span class="hljs-regexp">/etc/</span>hostname`<br>   - `sudo vim <span class="hljs-regexp">/etc/</span>hosts`<br><br><span class="hljs-number">6</span>. 修改用户名（这里直接新建一个）<br><br>   ```shell<br>   <span class="hljs-comment"># 添加用户</span><br>   sudo adduser node2<br>   <span class="hljs-comment"># 设置密码</span><br>   sudo passwd node2<br>   <span class="hljs-comment"># 查看原用户所属的组</span><br>   id node1<span class="hljs-comment"># uid=1000(node1) gid=1000(node1) groups=1000(node1),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),110(lxd),999(docker)</span><br>   <br>   <br>   <span class="hljs-comment"># 加入各组，以获得各种权限</span><br>   sudo gpasswd -a node2 adm<br>   sudo gpasswd -a node2 cdrom<br>   sudo gpasswd -a node2 sudo<br>   sudo gpasswd -a node2 dip<br>   sudo gpasswd -a node2 plugdev<br>   sudo gpasswd -a node2 lxd<br>   sudo gpasswd -a node2 docker<br>   <span class="hljs-comment"># 把文件迁移过去</span><br>   sudo mv <span class="hljs-regexp">/home/</span>node1<span class="hljs-regexp">/* /</span>home<span class="hljs-regexp">/node2/</span><br>   <span class="hljs-comment"># 删除原用户</span><br>   sudo deluser node1<br></code></pre></td></tr></table></figure></code></pre></li></ol></li><li><p>配置/etc/hosts</p></li><li><p><code>systemctl restart docker</code><br><code>systemctl restart kubelet</code></p></li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 安装并配置docker</span><br>curl -fsSL https:<span class="hljs-regexp">//</span>test.docker.com -o test-docker.sh<br>sudo sh test-docker.sh<br>sudo gpasswd -a <span class="hljs-variable">$USER</span> docker<br>newgrp docker<br><br>sudo <span class="hljs-regexp">/etc/</span>docker/daemon.json<br>sudo vim <span class="hljs-regexp">/etc/</span>docker/daemon.json<br>systemctl restart docker<br><br><br><span class="hljs-comment"># 安装容器运行时</span><br>cat &lt;&lt;EOF | sudo tee <span class="hljs-regexp">/etc/m</span>odules-load.d/k8s.conf<br>overlay<br>br_netfilter<br>EOF<br><br>sudo modprobe overlay<br>sudo modprobe br_netfilter<br><br>cat &lt;&lt;EOF | sudo tee <span class="hljs-regexp">/etc/</span>sysctl.d/k8s.conf<br>net.bridge.bridge-nf-call-iptables  = <span class="hljs-number">1</span><br>net.bridge.bridge-nf-call-ip6tables = <span class="hljs-number">1</span><br>net.ipv4.ip_forward                 = <span class="hljs-number">1</span><br>EOF<br><br>sudo sysctl --system<br><br>lsmod | grep br_netfilter<br>lsmod | grep overlay<br><br>sysctl net.bridge.bridge-nf-call-iptables net.bridge.bridge-nf-call-ip6tables net.ipv4.ip_forward<br><br><br>sudo apt install -y curl gnupg2 software-properties-common apt-transport-https ca-certificates<br>sudo curl -fsSL https:<span class="hljs-regexp">//</span>download.docker.com<span class="hljs-regexp">/linux/u</span>buntu<span class="hljs-regexp">/gpg | sudo gpg --dearmour -o /</span>etc<span class="hljs-regexp">/apt/</span>trusted.gpg.d/docker.gpg<br>sudo add-apt-repository <span class="hljs-string">&quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot;</span><br>sudo apt update<br>sudo apt install -y containerd.io<br>containerd config default | sudo tee <span class="hljs-regexp">/etc/</span>containerd<span class="hljs-regexp">/config.toml &gt;/</span>dev/null <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span><br>sudo sed -i <span class="hljs-string">&#x27;s/SystemdCgroup \= false/SystemdCgroup \= true/g&#x27;</span> <span class="hljs-regexp">/etc/</span>containerd/config.toml<br>sudo systemctl restart containerd<br>sudo systemctl enable containerd<br><br><span class="hljs-comment"># 安装kubelet</span><br>sudo swapoff -a<span class="hljs-comment"># 关闭交换区</span><br>sudo vim <span class="hljs-regexp">/etc/</span>fstab<br>sudo apt-get update<br>sudo apt-get install -y apt-transport-https ca-certificates curl<br>curl -fsSL https:<span class="hljs-regexp">//</span>packages.cloud.google.com<span class="hljs-regexp">/apt/</span>doc<span class="hljs-regexp">/apt-key.gpg | sudo gpg --dearmor -o /</span>etc<span class="hljs-regexp">/apt/</span>keyrings/kubernetes-archive-keyring.gpg<br>echo <span class="hljs-string">&quot;deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main&quot;</span> | sudo tee <span class="hljs-regexp">/etc/</span>apt<span class="hljs-regexp">/sources.list.d/</span>kubernetes.list<br>sudo apt-get update<br>sudo apt-get install -y kubelet=<span class="hljs-number">1.27</span>.<span class="hljs-number">1</span>-<span class="hljs-number">00</span> kubeadm=<span class="hljs-number">1.27</span>.<span class="hljs-number">1</span>-<span class="hljs-number">00</span> kubectl=<span class="hljs-number">1.27</span>.<span class="hljs-number">1</span>-<span class="hljs-number">00</span><br>sudo apt-mark hold kubelet kubeadm kubectl<br>su<br>sudo passwd root<br>su<br><br><span class="hljs-comment"># 运行</span><br>sudo kubeadm init --image-repository registry.aliyuncs.com/google_containers  --apiserver-advertise-address=<span class="hljs-number">192.168</span>.<span class="hljs-number">139.134</span> --v=<span class="hljs-number">6</span><br>kubectl get nodes<br>mkdir -p <span class="hljs-variable">$HOME</span>/.kube<br>sudo cp -i <span class="hljs-regexp">/etc/</span>kubernetes<span class="hljs-regexp">/admin.conf $HOME/</span>.kube/config<br>sudo chown $(id -u):$(id -g) <span class="hljs-variable">$HOME</span><span class="hljs-regexp">/.kube/</span>config<br><br>wget https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/coreos/</span>flannel<span class="hljs-regexp">/master/</span>Documentation/kube-flannel.yml<br>kubectl apply -f kube-flannel.yml<br>kubectl get nodes<br>kubectl get pod -n kube-system<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在linux终端下使用代理（Clash+Proxychains4）</title>
    <link href="/2023/11/07/proxy/"/>
    <url>/2023/11/07/proxy/</url>
    
    <content type="html"><![CDATA[<p>参考资料：</p><ul><li><a href="https://opclash.com/article/302.html">Ubuntu 使用 Clash For Linux 客户端教程 - 彧繎博客 (opclash.com)</a></li><li><a href="https://stackoverflow.com/questions/71452219/tails-os-and-proxychains-getting-denied-connection">linux - tails os and proxychains - getting denied connection - Stack Overflow</a></li></ul><p>由于Clash已经删库跑路了，所以只能用在网上找到的链接</p><h4 id="1-安装并配置clash">1. 安装并配置clash</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 下载方式1：Github下载文件</span><br>wget https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/Dreamacro/</span>clash<span class="hljs-regexp">/releases/</span>download<span class="hljs-regexp">/v1.14.0/</span>clash-linux-amd64-v1.<span class="hljs-number">14.0</span>.gz<br><br><span class="hljs-comment"># 下载方式2：本站下载文件</span><br>wget https:<span class="hljs-regexp">//gi</span>t.opclash.com<span class="hljs-regexp">/kehuduan/</span>clash/clash-linux-amd64-v1.<span class="hljs-number">14.0</span>.gz<br><br><span class="hljs-comment"># 解压文件</span><br>gzip -d clash-linux-amd64-v1.<span class="hljs-number">14.0</span>.gz<br><br><span class="hljs-comment"># 给予权限</span><br>chmod +x clash-linux-amd64-v1.<span class="hljs-number">14.0</span><br><br><span class="hljs-comment"># 改名移动</span><br>mv clash-linux-amd64-v1.<span class="hljs-number">14.0</span> <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>clash<br><br><span class="hljs-comment"># 查看版本</span><br>clash -v<br><br><span class="hljs-comment"># 启动 Clash（然后kill，目的是生成$HOME/.config/clash/文件，等到导入订阅之后再启动才会有效果）</span><br>clash<br><br><span class="hljs-comment"># 进入目录</span><br>cd <span class="hljs-variable">$HOME</span><span class="hljs-regexp">/.config/</span>clash/<br><br><span class="hljs-comment"># 导入订阅</span><br>wget -O config.yaml 订阅地址<br></code></pre></td></tr></table></figure><p>注意事项：</p><ul><li>这里的导入订阅可以直接从window的clash中将yaml配置文件复制到linux机器上，而不用wget</li><li>值得注意的是，我们这里都是在个人目录下配置的，也可以在根目录下配置。这会导致订阅配置文件的地址不同而已（家目录下）</li></ul><h4 id="2-配置代理">2. 配置代理</h4><p>有两种方式，一种是通过环境变量，一种是通过proxychains4</p><h5 id="（1）通过环境变量">（1）通过环境变量</h5><ul><li><p>临时：在当前终端export：export http_proxy=http://127.0.0.1:7890 https_proxy=http://127.0.0.1:7890</p></li><li><p>永久：写入~/.bashrc（完成后记得source ~/.bashrc）：</p><p><code>echo -e &quot;export http_proxy=http://127.0.0.1:7890\nexport https_proxy=http://127.0.0.1:7890&quot; &gt;&gt; ~/.bashrc</code></p></li></ul><h5 id="（2）通过proxychains4（推荐）">（2）通过proxychains4（推荐）</h5><p>可以直接apt-get install，也可以通过源码安装（非root用户只能通过源码安装，但笔者没在非root用户下试过，一般配置好configure，设置好环境变量应该可以）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/rofl0r/proxychains-ng<br><span class="hljs-built_in">cd</span> proxychains-ng<br>./configure<br>sudo make<br>sudo make install<br></code></pre></td></tr></table></figure><p>接下来修改ProxyChains的配置文件/etc/proxychains.conf</p><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs node-repl">dynamic_chain<br><span class="hljs-meta prompt_">...</span><br>proxy_dns<br><span class="hljs-meta prompt_">...</span><br>[ProxyList]<br>socks5  127.0.0.1 7890<br><br></code></pre></td></tr></table></figure><ul><li>上述条目解除注释，其余注释</li><li>[ProxyList]后添加代理，这里我们添加我们之前设置的代理（clash使用的端口号默认为7890）</li></ul><p>到了这一步，<strong>直接启动clash之后就可以使用了</strong>，以访问谷歌为例：</p><ul><li>已设置环境变量：<code>curl google.com</code></li><li>通过proxychains4： <code>proxychains4 curl google.com</code></li></ul><p>其它：</p><ul><li><p>还可以设置git代理</p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tcl">git config --<span class="hljs-keyword">global</span> <span class="hljs-keyword">http</span>.proxy <span class="hljs-keyword">http</span>://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>:<span class="hljs-number">7890</span> &amp;&amp; git config --<span class="hljs-keyword">global</span> https.proxy <span class="hljs-keyword">http</span>://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>:<span class="hljs-number">7890</span><br></code></pre></td></tr></table></figure></li><li><p>为什么选择proxychains4：可以清楚地知道自己哪条命令用来代理，并且可以为多种命令设置代理，如docker、k8s等</p></li></ul><h4 id="3-设置开机自启动">3. 设置开机自启动</h4><ol><li><p>sudo vim /etc/systemd/system/clash.service</p></li><li><p>加入下列内容（记得修改ExecStart路径）</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=Clash - A rule-based tunnel in Go<br><span class="hljs-attr">Documentation</span>=https://github.com/Dreamacro/clash/wiki<br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">OOMScoreAdjust</span>=-<span class="hljs-number">1000</span><br><span class="hljs-attr">ExecStart</span>=/usr/local/bin/clash -f /root/.config/clash/config.yaml<br><span class="hljs-attr">Restart</span>=<span class="hljs-literal">on</span>-failure<br><span class="hljs-attr">RestartSec</span>=<span class="hljs-number">5</span><br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=multi-user.target<br></code></pre></td></tr></table></figure></li><li><pre><code class="hljs"># 配置开机自启systemctl enable clash# 启动 clash 服务 （重启、终止对应为restart stop）systemctl start clash</code></pre></li></ol><h5 id=""></h5>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>pollux</title>
    <link href="/2023/08/25/pollux/"/>
    <url>/2023/08/25/pollux/</url>
    
    <content type="html"><![CDATA[<h1>Pollux</h1><h2 id="背景">背景</h2><h3 id="1-系统吞吐量">1. 系统吞吐量</h3><p>即每个单位时间处理的训练实例的数量，</p><ul><li>影响因素：<ul><li>分配给job的资源分配和分布</li><li>分布执行和同步的方法（数据并行）</li><li>batchsize</li></ul></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>g</mi><mi>r</mi><mi>a</mi><mi>d</mi></mrow></msub></mrow><annotation encoding="application/x-tex">T_{grad}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>与<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>s</mi><mi>y</mi><mi>n</mi><mi>c</mi></mrow></msub></mrow><annotation encoding="application/x-tex">T_{sync}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">sy</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>s</mi><mi>y</mi><mi>n</mi><mi>c</mi></mrow></msub></mrow><annotation encoding="application/x-tex">T_{sync}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">sy</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>不变，因此要提高<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>g</mi><mi>r</mi><mi>a</mi><mi>d</mi></mrow></msub></mrow><annotation encoding="application/x-tex">T_{grad}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>，即提高batchsize</li></ul></li></ul><h3 id="2-统计效率">2. 统计效率</h3><p>即每个处理的训练实例所取得的进展量。</p><ul><li>影响因素：<ul><li>batchsize：较大的batchsize通常会降低统计效率</li><li>learning rate</li></ul></li></ul><p><strong>Gradient noise scale:</strong></p><ul><li>衡量随机梯度的<strong>噪声信号比</strong>，值越大batch size与learning rate就算设置的较大也不容易降低统计效率</li><li>噪声高（如接近收敛时），增加batchsize会更有用</li></ul><p><strong>Learning rate scaling:</strong></p><ul><li>batchsize增加时，learning rate也要增加</li><li>较大batchsize不止会降低统计效率，也可能在验证性能方面降低最终模型质量</li></ul><blockquote><ul><li><p>统计效率是每处理一单位数据所取得的训练进度，当统计效率下降时，训练所需要的<strong>epoch数量会增加</strong>。最佳的训练效果需要在系统吞吐量和统计效率之间权衡。</p></li><li><p>为什么要协调（batch size、learning rate、gpu nums）：</p></li><li><p><code>为了提高系统吞吐量 → 提高 gpu nums → 提高 batch size → 统计效率会下降（需要重新调整learning rate）</code></p></li></ul></blockquote><h3 id="3-已有调度器">3. 已有调度器</h3><ul><li>non-sscale-adaptive：由用户指定job的GPU数，如Tiresias、Gandiva。（其实应不应该改变用户要求的GPU数，这是一个问题）<ul><li>Gandiva能动态改变job的GPU数，但其没有基于作业可扩展性的知识（opportunistically）</li></ul></li><li>scale-adaptive：基于资源在加速job方面的有用性来动态决定资源数量分配，如Optimus（只动态分配GPU）、SLAQ、Gavel、AntMan、Themis</li><li>Crucially, existing schedulers are agnostic to the statistical efficiency of DL training and the inter-dependence of resource decisions and training parameters</li></ul><h2 id="Goodput">Goodput</h2><p>本文定义了 goodput：在第 t 个 iteration 的 goodput 为系统吞吐量和统计效率的乘积。</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>G</mi><mi>O</mi><mi>O</mi><mi>D</mi><mi>P</mi><mi>U</mi><msub><mi>T</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>m</mi><mo stretchy="false">)</mo><mo>=</mo><mi>T</mi><mi>H</mi><mi>R</mi><mi>O</mi><mi>U</mi><mi>G</mi><mi>H</mi><mi>P</mi><mi>U</mi><mi>T</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>m</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>E</mi><mi>F</mi><mi>F</mi><mi>I</mi><mi>C</mi><mi>I</mi><mi>E</mi><mi>N</mi><mi>C</mi><msub><mi>Y</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>M</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>m</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">GOODPUT_t(a,m)=THROUGHPUT(a,m,s)*EFFICIENCY_t(M(a,m,s))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">GOO</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.02778em;">RO</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal">G</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">EFF</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.07153em;">ENC</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mclose">))</span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>∈</mo><msup><mi>R</mi><mi>N</mi></msup></mrow><annotation encoding="application/x-tex">a\in R^N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span></span></span>是 allocation vector，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">a_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是从节点 n 分配的 GPU 数量，m 是 batch size，s 为梯度累积步骤数。</p><p>总的 batch size：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>m</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><mi>S</mi><mi>U</mi><mi>M</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>m</mi><mo>∗</mo><mo stretchy="false">(</mo><mi>s</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">M(a,m,s)=SUM(a)*m*(s+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>  →  <code>/home/jxlai/project/adaptdl/simulator/simulator.py:117</code></p><blockquote><p>goodput可以理解为对训练进度有用的吞吐量部分</p></blockquote><p>:star:<strong>Pollux’s approach：</strong></p><ul><li>initial batch size <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">M_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> and learning rate <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>η</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">\eta_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 由用户提交job时指定</li><li>Pollux使用单一GPU启动作业，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>=</mo><mi>M</mi><mo>=</mo><msub><mi>M</mi><mn>0</mn></msub><mo separator="true">,</mo><mtext> </mtext><mi>s</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mtext> </mtext><mi>η</mi><mo>=</mo><msub><mi>η</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">m=M=M_0,\ s=0,\ \eta=\eta_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>   (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>≥</mo><msub><mi>M</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">M\ge M_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)</li><li>job运行时，Pollux profile，学习和细化系统吞吐量和统计效率预测模型</li><li>使用上述预测模型，根据集群范围的资源可用性和性能，Pollux 定期为每个作业重新调整 (a,m,s)</li></ul><p><strong>Plug-in Learning Rate Scaling:</strong></p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>S</mi><mi>C</mi><mi>A</mi><mi>L</mi><msub><mi>E</mi><mi>L</mi></msub><mi>R</mi><mo stretchy="false">(</mo><msub><mi>M</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>M</mi><mo stretchy="false">)</mo><mo>⟶</mo><mi>λ</mi></mrow><annotation encoding="application/x-tex">SCALE_LR(M_0,M)\longrightarrow \lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">SC</span><span class="mord mathnormal">A</span><span class="mord mathnormal">L</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⟶</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span></span></span></span></span></p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span></span></span></span>是用于衡量学习率的指标</li><li>SCALE_LR能利用训练过程中收集到的指标如GNS</li><li>使用这种接口，可以实现多种学习率scale规则</li></ul><h3 id="1-统计效率建模">1 统计效率建模</h3><p>为了支持自适应SGD的各种变种，我们采用 pre-conditioned gradient noise scale：</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>φ</mi><mi>t</mi></msub><mo>=</mo><mfrac><mrow><mi>t</mi><mi>r</mi><mo stretchy="false">(</mo><mi>P</mi><mo>∑</mo><msup><mi>P</mi><mi>T</mi></msup><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∣</mi><mi>P</mi><mi>g</mi><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\varphi_t=\frac{tr(P\sum P^T)}{|Pg|^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4543em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5183em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>不同batchsize要取得相同的训练进展需要<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><msub><mi>φ</mi><mi>t</mi></msub><mi mathvariant="normal">/</mi><mi>M</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(1+\varphi_t/M)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span></span></span></span>次训练迭代，即每次迭代取得的进展为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>M</mi><mrow><mi>M</mi><mo>+</mo><msub><mi>φ</mi><mi>t</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{M}{M+\varphi_t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3534em;vertical-align:-0.4811em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathnormal mtight">φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2963em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>一个DL任务在使用 batch size <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>≥</mo><msub><mi>M</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">M ≥ M_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>时的统计效率是相对于用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">M_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 来说，每用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span> 个训练样本所获得的训练进度。统计效率可以被计算为：</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mi>F</mi><mi>F</mi><mi>I</mi><mi>C</mi><mi>I</mi><mi>E</mi><mi>N</mi><mi>C</mi><msub><mi>Y</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>M</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><msub><mi>φ</mi><mi>t</mi></msub><mo>+</mo><msub><mi>M</mi><mn>0</mn></msub></mrow><mrow><msub><mi>φ</mi><mi>t</mi></msub><mo>+</mo><mi>M</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">EFFICIENCY_t(M)=\frac{\varphi_t+M_0}{\varphi_t+M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">EFF</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.07153em;">ENC</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2408em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><blockquote><p>这个式子不是应该再乘以<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>M</mi><msub><mi>M</mi><mn>0</mn></msub></mfrac></mrow><annotation encoding="application/x-tex">\frac{M}{M_0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3174em;vertical-align:-0.4451em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4451em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>吗?</p></blockquote><p>在训练过程中，Pollux 估计了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>φ</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\varphi_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的值，然后使用 上述式子 来预测不同批次大小下的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mi>F</mi><mi>F</mi><mi>I</mi><mi>C</mi><mi>I</mi><mi>E</mi><mi>N</mi><mi>C</mi><mi>Y</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">EFFICIENCY(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">EFF</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.07153em;">ENC</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span>。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">ϕt</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ϕt</span></span></span></span> 的测量值随着迭代 t 的训练进度而变化，因此 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mi>F</mi><mi>F</mi><mi>I</mi><mi>C</mi><mi>I</mi><mi>E</mi><mi>N</mi><mi>C</mi><msub><mi>Y</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>M</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">EFFICIENCY_t (M)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">EFF</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.07153em;">ENC</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span></span></span></span> 反映了真实统计效率所表现出的寿命依赖性趋势。</p><p><img src="image-20230919234457481.png" alt="image-20230919234457481"></p><ul><li>TOP中，曲线间的相似程度意味着统计效率的准确性</li><li>MIDDLE中，表明不同 batch szie 有不同的统计效率</li><li>BOTTOM中，表明使用批量大小 M 测量的 φt 可以被 Pollux 用于预测不同批量大小 M’ 下 EFFICIENTYt 的值，而无需提前使用 M’ 进行训练</li></ul><p><strong>Upper batch size limit:</strong></p><ul><li>为什么要有batch size上限：学习率规则可能失效。</li><li>实际上，batch size 放大32倍在大多数情况下也能很好工作；而且可以加入新的学习率规则到 Plug-in 中</li></ul><p><strong>Estimating <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>φ</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\varphi_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>:</strong></p><ul><li>当gpu且没有梯度累积时，uses consecutive gradient estimates ˆg(t−1) and ˆg(t).</li></ul><h3 id="2-系统吞吐量建模">2 系统吞吐量建模</h3><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>H</mi><mi>R</mi><mi>O</mi><mi>U</mi><mi>G</mi><mi>H</mi><mi>P</mi><mi>U</mi><mi>T</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>m</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><mi>M</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>m</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><msub><mi>T</mi><mrow><mi>i</mi><mi>t</mi><mi>e</mi><mi>r</mi></mrow></msub><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>m</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">THROUGHPUT(a,m,s)=M(a,m,s)/T_{iter}(a,m,s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.02778em;">RO</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal">G</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">er</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span></p><ul><li>s: <a href="https://zhuanlan.zhihu.com/p/423359955">number of gradient accumulation steps是一个深度学习中的概念，它指的是在进行一次梯度更新之前，累积多少个批次的数据的梯度</a><a href="https://zhuanlan.zhihu.com/p/423359955">1</a><a href="https://zhuanlan.zhihu.com/p/353743194">。这个方法可以用来节省显存，或者增大有效的批量大小</a><a href="https://zhuanlan.zhihu.com/p/353743194">2</a>。</li></ul></li><li><p>对于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>i</mi><mi>t</mi><mi>e</mi><mi>r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">T_{iter}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">er</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，</p><ul><li><p>先不考虑梯度累积（s）：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>i</mi><mi>t</mi><mi>e</mi><mi>r</mi></mrow></msub><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>m</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msub><mi>T</mi><mrow><mi>g</mi><mi>r</mi><mi>a</mi><mi>d</mi></mrow></msub><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>m</mi><msup><mo stretchy="false">)</mo><mi>γ</mi></msup><mo>+</mo><msub><mi>T</mi><mrow><mi>s</mi><mi>y</mi><mi>n</mi><mi>c</mi></mrow></msub><mo stretchy="false">(</mo><mi>a</mi><msup><mo stretchy="false">)</mo><mi>γ</mi></msup><msup><mo stretchy="false">)</mo><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mi>γ</mi></mrow></msup></mrow><annotation encoding="application/x-tex">T_{iter}(a,m,s)=(T_{grad}(a,m)^\gamma+T_{sync}(a)^\gamma)^{1/ \gamma}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">er</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1741em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">sy</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1/</span><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>极端情况1：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>g</mi><mi>r</mi><mi>a</mi><mi>d</mi></mrow></msub></mrow><annotation encoding="application/x-tex">T_{grad}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>s</mi><mi>y</mi><mi>n</mi><mi>c</mi></mrow></msub></mrow><annotation encoding="application/x-tex">T_{sync}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">sy</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 没有重叠，那么 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>i</mi><mi>t</mi><mi>e</mi><mi>r</mi></mrow></msub><mo>=</mo><msub><mi>T</mi><mrow><mi>g</mi><mi>r</mi><mi>a</mi><mi>d</mi></mrow></msub><mo>+</mo><msub><mi>T</mi><mrow><mi>s</mi><mi>y</mi><mi>n</mi><mi>c</mi></mrow></msub></mrow><annotation encoding="application/x-tex">T_{iter}=T_{grad}+T_{sync}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">er</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">sy</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\gamma=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></li><li>极端情况2：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>g</mi><mi>r</mi><mi>a</mi><mi>d</mi></mrow></msub></mrow><annotation encoding="application/x-tex">T_{grad}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>s</mi><mi>y</mi><mi>n</mi><mi>c</mi></mrow></msub></mrow><annotation encoding="application/x-tex">T_{sync}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">sy</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 完全重叠，那么 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>i</mi><mi>t</mi><mi>e</mi><mi>r</mi></mrow></msub><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msub><mi>T</mi><mrow><mi>g</mi><mi>r</mi><mi>a</mi><mi>d</mi></mrow></msub><mo separator="true">,</mo><msub><mi>T</mi><mrow><mi>s</mi><mi>y</mi><mi>n</mi><mi>c</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T_{iter}=max(T_{grad},T_{sync})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">er</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">sy</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi><mo>=</mo><mo>+</mo><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\gamma=+\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">+</span><span class="mord">∞</span></span></span></span></li><li>综上，该式子可以通过调整 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span></span></span></span> 正确表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>i</mi><mi>t</mi><mi>e</mi><mi>r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">T_{iter}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">er</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li></ul></li><li><p>考虑梯度累积（s）：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>i</mi><mi>t</mi><mi>e</mi><mi>r</mi></mrow></msub><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>m</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><mi>s</mi><mo>×</mo><msub><mi>T</mi><mrow><mi>g</mi><mi>r</mi><mi>a</mi><mi>d</mi></mrow></msub><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>m</mi><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><msub><mi>T</mi><mrow><mi>g</mi><mi>r</mi><mi>a</mi><mi>d</mi></mrow></msub><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>m</mi><msup><mo stretchy="false">)</mo><mi>γ</mi></msup><mo>+</mo><msub><mi>T</mi><mrow><mi>s</mi><mi>y</mi><mi>n</mi><mi>c</mi></mrow></msub><mo stretchy="false">(</mo><mi>a</mi><msup><mo stretchy="false">)</mo><mi>γ</mi></msup><msup><mo stretchy="false">)</mo><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mi>γ</mi></mrow></msup></mrow><annotation encoding="application/x-tex">T_{iter}(a,m,s)=s\times T_{grad}(a,m)+(T_{grad}(a,m)^\gamma+T_{sync}(a)^\gamma)^{1/ \gamma}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">er</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1741em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">sy</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1/</span><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>在第（s+1）次跨所有gpu同步之前，每个gpu梯度进行s次局部聚合，从而实现更大的总批处理大小</li></ul></li></ul></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>g</mi><mi>r</mi><mi>a</mi><mi>d</mi></mrow></msub><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>α</mi><mrow><mi>g</mi><mi>r</mi><mi>a</mi><mi>d</mi></mrow></msub><mo>+</mo><msub><mi>β</mi><mrow><mi>g</mi><mi>r</mi><mi>a</mi><mi>d</mi></mrow></msub><mo separator="true">⋅</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">T_{grad}(m)=\alpha_{grad}+\beta_{grad}·m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span></span></span></span></p><ul><li>局部梯度估计是使用反向传播计算的，其运行时间与每个 gpu 的 batchsize m 呈线性关系</li></ul></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mtext>sync </mtext></msub><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>m</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> if </mtext><mi>K</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msubsup><mi>α</mi><mtext>sync </mtext><mtext>local </mtext></msubsup><mo>+</mo><msubsup><mi>β</mi><mtext>sync </mtext><mtext>local </mtext></msubsup><mo>⋅</mo><mo stretchy="false">(</mo><mi>K</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> if </mtext><mi>N</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>K</mi><mo>≥</mo><mn>2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msubsup><mi>α</mi><mtext>sync </mtext><mtext>node </mtext></msubsup><mo>+</mo><msubsup><mi>β</mi><mtext>sync </mtext><mtext>node </mtext></msubsup><mo>⋅</mo><mo stretchy="false">(</mo><mi>K</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> otherwise, </mtext></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">T_{\text {sync }}(a, m)= \begin{cases}    0 &amp; \text { if } K=1 \\     \alpha_{\text {sync }}^{\text {local }}+\beta_{\text {sync }}^{\text {local }} \cdot(K-2) &amp; \text { if } N=1, K \geq 2 \\     \alpha_{\text {sync }}^{\text {node }}+\beta_{\text {sync }}^{\text {node }} \cdot(K-2) &amp; \text { otherwise, }\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">sync </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.91em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.453em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">sync </span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">local </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.453em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">sync </span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">local </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.453em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">sync </span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">node </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.453em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">sync </span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">node </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord"> if </span></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord"> if </span></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord"> otherwise, </span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><ul><li>K为GPU数，N为物理节点数</li><li>由于使用三个或更多GPU会有性能倒退（stragglers或网络延迟），因此加了一个倒退的参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span></li></ul></li></ul><p><img src="image-20230920104854344.png" alt="image-20230920104854344"></p><ul><li><strong>Limits of the throughput model：</strong><ul><li>我们在建模throughput时只考虑了GPU数量和位置、batchsize、梯度累积步数s；但实际上情况可能会更复杂</li><li>解决方法：将Goodput模块化，改变throughput分成时无需修改核心功能代码</li></ul></li></ul><h2 id="Pollux架构与设计">Pollux架构与设计</h2><p>Pollux 以两种不同的粒度调整 DL 作业执行。</p><ul><li>job-level: Pollux动态调整 batchsize 和 lr 以达到对分配资源的最高利用率</li><li>cluster-wide: 基于所有作业的 Goodput 动态分配资源（兼顾公平性和作业完成时间）</li></ul><img src="image-20230825102245735.png" alt="image-20230825102245735" style="zoom: 80%;" /><ol><li><p>PolluxAgent：</p><ol><li>拟合job的统计效率和吞吐量方程</li><li>对每个任务所给定的GPU资源分配结果，调整 batchsize 和 lr 以提高资源利用率</li><li>周期性向 PolluxSched报告job对应的 goodput function</li></ol></li><li><p>PolluxSched</p><ol><li>兼顾每个job的goodput和资源争用，在集群范围内周期性优化资源分配</li><li>同时考虑了资源重分配的开销、多作业间网络干扰导致的减速、资源公平性</li></ol></li></ol><h4 id="3-1-PolluxAgent">3.1 PolluxAgent</h4><p>系统吞吐量的表示：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mrow><mi>s</mi><mi>y</mi><mi>s</mi></mrow></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>α</mi><mrow><mi>g</mi><mi>r</mi><mi>a</mi><mi>d</mi></mrow></msub><mo separator="true">,</mo><msub><mi>β</mi><mrow><mi>g</mi><mi>r</mi><mi>a</mi><mi>d</mi></mrow></msub><mo separator="true">,</mo><msubsup><mi>α</mi><mrow><mi>s</mi><mi>y</mi><mi>n</mi><mi>c</mi></mrow><mrow><mi>l</mi><mi>o</mi><mi>c</mi><mi>a</mi><mi>l</mi></mrow></msubsup><mo separator="true">,</mo><msubsup><mi>β</mi><mrow><mi>s</mi><mi>y</mi><mi>n</mi><mi>c</mi></mrow><mrow><mi>l</mi><mi>o</mi><mi>c</mi><mi>a</mi><mi>l</mi></mrow></msubsup><mo separator="true">,</mo><msubsup><mi>α</mi><mrow><mi>s</mi><mi>y</mi><mi>n</mi><mi>c</mi></mrow><mrow><mi>n</mi><mi>o</mi><mi>d</mi><mi>e</mi></mrow></msubsup><mo separator="true">,</mo><msubsup><mi>β</mi><mrow><mi>s</mi><mi>y</mi><mi>n</mi><mi>c</mi></mrow><mrow><mi>n</mi><mi>o</mi><mi>d</mi><mi>e</mi></mrow></msubsup><mo separator="true">,</mo><mi>γ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\theta_{sys}=(\alpha_{grad},\beta_{grad},\alpha^{local}_{sync},\beta_{sync}^{local},\alpha^{node}_{sync},\beta_{sync}^{node},\gamma)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">sys</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2322em;vertical-align:-0.3831em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.453em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">sy</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">c</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">oc</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.453em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">sy</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">c</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">oc</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.453em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">sy</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">c</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.453em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">sy</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">c</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mclose">)</span></span></span></span></p><p>GOODPUT的表示：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>θ</mi><mrow><mi>s</mi><mi>y</mi><mi>s</mi></mrow></msub><mo separator="true">,</mo><msub><mi>ϕ</mi><mi>t</mi></msub><mo separator="true">,</mo><msub><mi>M</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\theta_{sys},\phi_t,M_0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">sys</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">ϕ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><ul><li><p>每次<strong>收集的信息</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>m</mi><mo separator="true">,</mo><mi>s</mi><mo separator="true">,</mo><msub><mi>T</mi><mrow><mi>i</mi><mi>t</mi><mi>e</mi><mi>r</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(a,m,s,T_{iter})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">er</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，a为资源分配情况，m为每个GPU的batchsize，s为累积梯度步骤数</p></li><li><p>周期性 将参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mrow><mi>s</mi><mi>y</mi><mi>s</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\theta_{sys}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">sys</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 拟合到迄今为止收集的所有吞吐量数据，将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mrow><mi>s</mi><mi>y</mi><mi>s</mi></mrow></msub><mo separator="true">,</mo><msub><mi>φ</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mtext>计算可知</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\theta_{sys},\varphi_t(计算可知)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">sys</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord cjk_fallback">计算可知</span><span class="mclose">)</span></span></span></span>,发送给 PolluxSched</p><blockquote><p>Specifically, we minimize the root mean squared logarithmic error (RMSLE) between Eqn. 11 and the collected data triples, using L-BFGS-B.</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo separator="true">,</mo><mi>β</mi></mrow><annotation encoding="application/x-tex">\alpha,\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span> 非负</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi><mo>∈</mo><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mn>10</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\lambda\in[1,10]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">λ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">10</span><span class="mclose">]</span></span></span></span></li></ul></blockquote></li></ul><p><strong>Prior-driven exploration:</strong></p><ul><li>每个作业从一个 GPU 开始，最初被假定为完美地扩展到更多的 GPU<ul><li>最多使用1个GPU时：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>α</mi><mrow><mi>s</mi><mi>y</mi><mi>n</mi><mi>c</mi></mrow><mrow><mi>l</mi><mi>o</mi><mi>c</mi><mi>a</mi><mi>l</mi></mrow></msubsup><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\alpha_{sync}^{local}=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2322em;vertical-align:-0.3831em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.453em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">sy</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">c</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">oc</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></li><li>最多使用1个节点时：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>α</mi><mrow><mi>s</mi><mi>y</mi><mi>n</mi><mi>c</mi></mrow><mrow><mi>l</mi><mi>o</mi><mi>c</mi><mi>a</mi><mi>l</mi></mrow></msubsup><mo>=</mo><msubsup><mi>β</mi><mrow><mi>s</mi><mi>y</mi><mi>n</mi><mi>c</mi></mrow><mrow><mi>l</mi><mi>o</mi><mi>c</mi><mi>a</mi><mi>l</mi></mrow></msubsup><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\alpha_{sync}^{local}=\beta_{sync}^{local}=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2322em;vertical-align:-0.3831em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.453em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">sy</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">c</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">oc</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2322em;vertical-align:-0.3831em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.453em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">sy</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">c</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">oc</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>(？ )</li><li>最多使用2个GPU时：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>β</mi><mrow><mi>s</mi><mi>y</mi><mi>n</mi><mi>c</mi></mrow><mrow><mi>l</mi><mi>o</mi><mi>c</mi><mi>a</mi><mi>l</mi></mrow></msubsup><mo>=</mo><msubsup><mi>β</mi><mrow><mi>s</mi><mi>y</mi><mi>n</mi><mi>c</mi></mrow><mrow><mi>n</mi><mi>o</mi><mi>d</mi><mi>e</mi></mrow></msubsup><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\beta_{sync}^{local}=\beta_{sync}^{node}=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2322em;vertical-align:-0.3831em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.453em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">sy</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">c</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">oc</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2322em;vertical-align:-0.3831em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.453em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">sy</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">c</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></li></ul></li><li>PolluxSched is then encouraged to allocate more GPUs and/or nodes to the job, naturally as part of its resource optimization (§4.2), until the PolluxAgent can estimate θsys more accurately</li><li>能分配的GPU最大数为job的生命周期中被分配GPU数的两倍（？）</li></ul><p><strong>Training job tuning:</strong></p><ul><li><p>知道<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mrow><mi>s</mi><mi>y</mi><mi>s</mi></mrow></msub><mo separator="true">,</mo><msub><mi>φ</mi><mi>t</mi></msub><mo separator="true">,</mo><msub><mi>M</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">\theta_{sys},\varphi_t,M_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">sys</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>之后，即可指定job的GOODPUT，进而得到以下式子，决定batchsize和s，以最大化利用当前分到的资源，同时调整 learning rate 以适应新的batchsize</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">(</mo><msup><mi>m</mi><mo>∗</mo></msup><mo separator="true">,</mo><msup><mi>s</mi><mo>∗</mo></msup><mo fence="true">)</mo></mrow><mo>=</mo><mi><munder><mo><mi mathvariant="normal">argmax</mi><mo>⁡</mo></mo><mrow><mi>m</mi><mo separator="true">,</mo><mi>s</mi></mrow></munder></mi><mi mathvariant="normal">GOODPUT</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>m</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\left(m^*, s^*\right)=\underset{m, s}{\operatorname{argmax}} \operatorname{GOODPUT}(a, m, s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.7805em;vertical-align:-1.0305em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.2056em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mop"><span class="mord mathrm">argmax</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0305em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mord mathrm">GOODPUT</span></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span></li></ul></li></ul><h4 id="3-2-PolluxSched">3.2 PolluxSched</h4><p>The PolluxSched periodically allocates (and re-allocates) resources for every job in the cluster.</p><ul><li><p><strong>maximizes a fitness function</strong></p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mi>I</mi><mi>T</mi><mi>N</mi><mi>E</mi><mi>S</mi><msub><mi>S</mi><mi>p</mi></msub><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mfrac><mn>1</mn><mi>J</mi></mfrac><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>J</mi></munderover><mi>S</mi><mi>P</mi><mi>E</mi><mi>E</mi><mi>D</mi><mi>U</mi><msub><mi>P</mi><mi>j</mi></msub><mo stretchy="false">(</mo><msub><mi>A</mi><mi>j</mi></msub><msup><mo stretchy="false">)</mo><mi>P</mi></msup><msup><mo stretchy="false">)</mo><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mi>P</mi></mrow></msup><mspace linebreak="newline"></mspace><mi>S</mi><mi>P</mi><mi>E</mi><mi>E</mi><mi>D</mi><mi>U</mi><msub><mi>P</mi><mi>j</mi></msub><mo stretchy="false">(</mo><msub><mi>A</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>m</mi><mi>a</mi><msub><mi>x</mi><mrow><mi>m</mi><mo separator="true">,</mo><mi>s</mi></mrow></msub><mi>G</mi><mi>O</mi><mi>O</mi><mi>D</mi><mi>P</mi><mi>U</mi><msub><mi>T</mi><mi>j</mi></msub><mo stretchy="false">(</mo><msub><mi>A</mi><mi>j</mi></msub><mo separator="true">,</mo><mi>m</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><mrow><mi>m</mi><mi>a</mi><msub><mi>x</mi><mrow><mi>m</mi><mo separator="true">,</mo><mi>s</mi></mrow></msub><mi>G</mi><mi>O</mi><mi>O</mi><mi>D</mi><mi>P</mi><mi>U</mi><msub><mi>T</mi><mi>j</mi></msub><mo stretchy="false">(</mo><msub><mi>a</mi><mi>f</mi></msub><mo separator="true">,</mo><mi>m</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">FITNESS_p(A)=(\frac1J\sum\limits_{j=1}^JSPEEDUP_j(A_j)^P)^{1/P} \\SPEEDUP_j(A_j)=\frac{max_{m,s}GOODPUT_j(A_j,m,s)}{max_{m,s}GOODPUT_j(a_f,m,s)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.05764em;">TNES</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.2421em;vertical-align:-1.4138em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.09618em;">J</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">SPEE</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1/</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">SPEE</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3991em;vertical-align:-0.9721em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">ma</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">GOO</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">ma</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">GOO</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><ul><li>J 为任务总数</li><li>A 是表示节点给任务分配的GPU数的矩阵，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mrow><mi>j</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">A_{jn}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">jn</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 表示节点n给任务j分配的GPU数</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>P</mi><mi>E</mi><mi>E</mi><mi>D</mi><mi>U</mi><msub><mi>P</mi><mi>j</mi></msub><mo stretchy="false">(</mo><msub><mi>A</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">SPEEDUP_j(A_j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">SPEE</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>表示任务j，由当前资源进行迭代得到的goodput，与用平均资源进行迭代得到的goodput之比，来表示加速</li><li>p用于调整公平性<ul><li>当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">p=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 时，PolluxSched会为能取得更高SPEEDUP的任务分配更多gpu</li><li>当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>→</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">p\rightarrow -\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">∞</span></span></span></span> 时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>T</mi><mi>N</mi><mi>E</mi><mi>S</mi><msub><mi>S</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">FITNESS_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.05764em;">TNES</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>平稳地接近加速值的最小值，在这种情况下，最大化<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>T</mi><mi>N</mi><mi>E</mi><mi>S</mi><msub><mi>S</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">FITNESS_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.05764em;">TNES</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>促进了训练作业之间的平等加速，但忽略了整体的集群质量和资源效率。</li><li>实验中取<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>=</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">p=-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span>效果较好</li></ul></li></ul></li><li><p><strong>重新分配资源的惩罚</strong></p><p>重新分配资源需要消耗时间，因此对于需要重新分配资源的任务，需要有一个惩罚</p><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>P</mi><mi>E</mi><mi>E</mi><mi>D</mi><mi>U</mi><msub><mi>P</mi><mi>j</mi></msub><mo stretchy="false">(</mo><msub><mi>A</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>⟵</mo><mi>S</mi><mi>P</mi><mi>E</mi><mi>E</mi><mi>D</mi><mi>U</mi><msub><mi>P</mi><mi>j</mi></msub><mo stretchy="false">(</mo><msub><mi>A</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>×</mo><mi>R</mi><mi>E</mi><mi>A</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>C</mi><mi mathvariant="normal">_</mi><mi>F</mi><mi>A</mi><mi>C</mi><mi>T</mi><mi>O</mi><msub><mi>R</mi><mi>j</mi></msub><mo stretchy="false">(</mo><mi>δ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">SPEEDUP_j(A_j)\longleftarrow SPEEDUP_j(A_j)\times REALLOC\_FACTOR_j(\delta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">SPEE</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⟵</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">SPEE</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">RE</span><span class="mord mathnormal">A</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.07153em;">OC</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.02778em;">CTO</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>E</mi><mi>A</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>C</mi><mi mathvariant="normal">_</mi><mi>F</mi><mi>A</mi><mi>C</mi><mi>T</mi><mi>O</mi><msub><mi>R</mi><mi>j</mi></msub><mo stretchy="false">(</mo><mi>δ</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msub><mi>T</mi><mi>j</mi></msub><mo>−</mo><msub><mi>R</mi><mi>j</mi></msub><mi>δ</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><msub><mi>T</mi><mi>j</mi></msub><mo>+</mo><mi>δ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">REALLOC\_FACTOR_j(\delta)=(T_j-R_j\delta)/(T_j+\delta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">RE</span><span class="mord mathnormal">A</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.07153em;">OC</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.02778em;">CTO</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mclose">)</span><span class="mord">/</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mclose">)</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">T_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 为任务的age（指的应该是持续时间）、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">R_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 为任务重新分配资源的次数、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span> 为重新分配资源的评估时延</p></li><li><p>之前经历过较多次重新分配资源的任务，会有较大的惩罚</p></li></ul></li><li><p><strong>干扰问题</strong></p><p>多任务共享一个节点时，它们在同步梯度和模型参数时的网络使用可能会相互干扰，导致多个任务都减慢</p><p>PolluxSched mitigates this issue by disallowing different distributed jobs (each using GPUs across multiple nodes) from sharing the same node. ensuring at most one distributed job is allocated to each node</p><ul><li>这个可以通过代码来看（5.3.2），貌似是通过指定一个干扰常数</li></ul></li><li><p><strong>对于非自适应的任务</strong></p><ul><li>用户可能想通过指定的batchsize运行，如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>=</mo><msub><mi>M</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">M=M_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，PolluxSched 可将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mi>F</mi><mi>F</mi><mi>I</mi><mi>C</mi><mi>I</mi><mi>E</mi><mi>N</mi><mi>C</mi><msub><mi>Y</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">EFFICIENCY_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">EFF</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.07153em;">ENC</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 设为1，然后只根据系统吞吐量来动态调整</li></ul></li></ul><p>PolluxAgent 和 PolluxSched 都需要一个子程序，在给定固定 a 的情况下优化 GOODPUTt (a, m, s)。我们通过首先对总批量大小 M 的一系列候选值进行采样来实现此过程，然后找到最小的 s，使得 m = ⌈M/s⌉ 根据用户定义的上限适合 GPU 内存，最后采用导致最高 GOODPUT 值的配置</p><h2 id="Evaluation">Evaluation</h2><h3 id="1-Experimental-Setup">1. Experimental Setup</h3><p><strong>Manually-tuned jobs for baseline DL schedulers：</strong></p><ul><li>对于表中的模型，采取一些列GPU allocations 和 batch sizes，采用一系列不同的 batch sizes 进行训练。当使用最优的batch size 能达到单GPU（也是最优batchsize）线性扩展性能的50%-80%时，即认为有效</li></ul><p><strong>Comparison of DL schedulers:</strong></p><ul><li>Pollux. We configured PolluxSched to use a 60s scheduling interval, and compute REALLOC_FACTOR(δ) using δ = 30s. PolluxAgent reports its most up-to-date system throughput parameters and gradient statistics every 30s. Unless otherwise specified, the default fairness knob value of p = −1 is used</li></ul><h3 id="3-Simulator-Experiments">3 Simulator Experiments</h3><p><strong>Simulator construction</strong></p><ul><li>simulate the throughput for a job<ul><li>a multi-dimensional linear interpolation on the configurations we measured</li></ul></li><li>simulate the statistical efficiency<ul><li>linearly interpolated its value of the PGNS between the two nearest batch sizes</li></ul></li><li>simulate the overhead of checkpoint-restarts</li><li>30-second delay for each job that has its resources re-allocated.</li></ul><p><strong>Scheduling Fairness</strong></p><ul><li><p>P=1最佳</p><p><img src="image-20230920220222146.png" alt="image-20230920220222146"></p></li></ul><p><strong>Sensitivity to job load</strong></p><ul><li><p>job增加，三个调度器的JCT均上升，但Pollux仍是最优的</p><p><img src="image-20230920220143060.png" alt="image-20230920220143060"></p></li></ul><p><strong>Impact of prior-driven exploration</strong></p><ul><li>low overhead from Pollux’s prior-driven exploration.（JCT变化不大）</li></ul><p><strong>Impact of scheduling interval</strong></p><ul><li><img src="image-20230920220958449.png" alt="image-20230920220958449"></li></ul><p><strong>Impact of interference avoidance</strong></p><p><img src="image-20230920221341084.png" alt="image-20230920221341084"></p><h2 id="code">code</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs routeros">\-__main__<br>\-simulate(arg)<br>|-policy = PolluxPolicy()<br>|-simulator = Cluster(workload, policy, args.min_nodes, <span class="hljs-attribute">num_gpus</span>=args.num_gpus,<br>                        <span class="hljs-attribute">max_nodes</span>=args.max_nodes, <span class="hljs-attribute">interference</span>=args.interference,<br>                        <span class="hljs-attribute">low_util</span>=args.low_util, <span class="hljs-attribute">high_util</span>=args.high_util)# 初始化参数，根据workload构建job<br>        |-simulator.<span class="hljs-keyword">step</span>(args.interval)<br>        \-job.<span class="hljs-keyword">step</span>(seconds, <span class="hljs-attribute">interference</span>=interference)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>paper</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>xv6</title>
    <link href="/2023/01/15/xv6/"/>
    <url>/2023/01/15/xv6/</url>
    
    <content type="html"><![CDATA[<blockquote><p>初次复制之前的笔记，还未整理，先鸽</p></blockquote><span id="more"></span><h1>xv6-labs-2020</h1><h2 id="系统调用">系统调用</h2><ul><li><p>kernel/syscall.h：<strong>定义各系统调用的编号</strong></p></li><li><p>user/user.h：在用户态下<strong>声明所有的系统调用函数</strong>（新增系统调用时，需要在这里声明才能在程序中调用）、以及一些辅助函数的声明</p></li><li><p>user/usys.pl：<strong>系统内核与用户程序的中间体</strong></p><p>该脚本文件会在编译期间被执行，生成个汇编文件<code>usys.S</code>。其对每一个系统调用抽象接口都生成了一个具体的现，叫做entry</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs perl"> <span class="hljs-number">1</span>  <span class="hljs-comment">#!/usr/bin/perl -w</span><br> <span class="hljs-number">2</span><br> <span class="hljs-number">3</span>  <span class="hljs-comment"># Generate usys.S, the stubs for syscalls.</span><br> <span class="hljs-number">4</span><br> <span class="hljs-number">5</span>  <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;# generated by usys.pl - do not edit\n&quot;</span>;<br> <span class="hljs-number">6</span><br> <span class="hljs-number">7</span>  <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;#include \&quot;kernel/syscall.h\&quot;\n&quot;</span>;<br> <span class="hljs-number">8</span><br> <span class="hljs-number">9</span>  <span class="hljs-function"><span class="hljs-keyword">sub</span> <span class="hljs-title">entry</span> </span>&#123;<br><span class="hljs-number">10</span>      <span class="hljs-keyword">my</span> $name = <span class="hljs-keyword">shift</span>;<br><span class="hljs-number">11</span>      <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;.global $name\n&quot;</span>;<br><span class="hljs-number">12</span>      <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;<span class="hljs-subst">$&#123;name&#125;</span>:\n&quot;</span>;<br><span class="hljs-number">13</span>      <span class="hljs-keyword">print</span> <span class="hljs-string">&quot; li a7, SYS_<span class="hljs-subst">$&#123;name&#125;</span>\n&quot;</span>;<br><span class="hljs-number">14</span>      <span class="hljs-keyword">print</span> <span class="hljs-string">&quot; ecall\n&quot;</span>;<br><span class="hljs-number">15</span>      <span class="hljs-keyword">print</span> <span class="hljs-string">&quot; ret\n&quot;</span>;<br><span class="hljs-number">16</span>  &#125;<br><span class="hljs-number">17</span><br><span class="hljs-number">18</span>  entry(<span class="hljs-string">&quot;fork&quot;</span>);<br><span class="hljs-number">19</span>  entry(<span class="hljs-string">&quot;exit&quot;</span>);<br></code></pre></td></tr></table></figure><ul><li>Makefile调用perl脚本user/usys.pl，它生成user/usys.S，即实际的系统调用存根，它使用RISC-V ecall指令转换到内核</li><li><code>li a7, SYS_$&#123;name&#125;\n</code>：将系统调用号 <code>SYS_$&#123;name&#125;</code>（来自<code>kernel/syscall.h</code>）传给RISC-V CPU上的<code>a7</code>寄存器，这样内核就可以过<code>a7</code>寄存器知道现在要处理的是什么系统调用。</li><li><code>ecall</code>：特殊指令，用来转入操作系统内核（ <strong>关键</strong> 指令）。</li><li><code>ret</code>：操作系统内核执行完后会返回到这里，执行ret就结束了用户看到系统调用，返回至用户程序。<br>你可以在编译后阅读<code>user/usys.S</code>，将其与上述脚本对应以便更好地理解。</li></ul></li><li><p>在usys.S中执行ecall进入内核：相应执行uservec、usertrap、usertrapret、userret等函数，实现用户态和内核态的切换以及其中系统调用的实现</p><ul><li><a href="https://zhuanlan.zhihu.com/p/462538325">xv6的trap实现流程 - 知乎 (zhihu.com)</a></li></ul></li><li><p>kernel/sysproc.c：通过一个proc结构体新变量来实现一个新的系统调用，在这里面有所有的<strong>与进程有关的</strong>系统调用函数，但所有系统调用函数的参数均为空，来自用户空间的参数需要通过argint等函数来实现</p></li><li><p>kernel/syscall.c：<strong>各个系统调用的入口</strong>。管理各个系统调用，内核中调用系统调用的地方，syscall函数，可以检索来自用户空间的系统调用参数</p></li><li><p>kernel/proc.h：定义寄存器（上下文）、cpu、进程控制块proc、进程状态（属于proc的一部分）、<strong>trapframe</strong>（属于proc的一部分，用于保存和写入用户空间32个寄存器的值，实现系统调用的<strong>参数传递和返回值传递</strong>）</p><p><img src="image-20221002000302454.png" alt="image-20221002000302454"></p></li><li><p>kernel/proc.c：真正实现对进程的控制的地方，sysproc.c中的系统调用函数最终的实现也需要依靠这里的函数</p></li></ul><h2 id="内存管理">内存管理</h2><h3 id="一些函数">一些函数</h3><ul><li><code>PX(level,va)</code>：用于获取页号（相对于页表基地址是第几项），va为虚拟地址，level为页表级数</li><li><code>pte_t *walk(pagetable_t pagetable, uint64 va, int alloc)</code><ul><li>在指定的页表<code>pagetable</code>中逐级查找，查找虚拟地址<code>va</code>对应的物理地址，返回对应叶子页表的页表项的地址</li><li>若alloc非0，则查找过程中可以为不在内存中的页表开辟空间，但无法建立映射，即开辟的空间里面的页表项是空的</li></ul></li><li><strong><code>int mappages(pagetable_t pagetable, uint64 va, uint64 size, uint64 pa, int perm)</code></strong><ul><li>将基地址为va，大小为size的虚拟空间，映射到基地址为pa，大小为size的物理空间；</li><li>先调用walk函数，获取页表项的地址，进而根据物理地址填上页表项</li><li>返回0表示成功，返回-1表示失败</li></ul></li><li><code>uint64walkaddr(pagetable_t pagetable, uint64 va)</code>：在指定的用户页表中找虚拟地址对应的物理地址，如果页表不存在/映射不存在返回 0</li><li>kvminit：<strong>创建初始内核页表</strong>（开辟空间并建立映射）</li><li>kvminthart: <strong>为CPU设置satp寄存器，刷新TLB</strong></li><li><code>void kvmmap(uint64 va, uint64 pa, uint64 sz, int perm)</code><ul><li>对mappages的封装，采用的页表默认为内核页表</li></ul></li><li><code>uint64 kvmpa(uint64 va)</code>：在内核页表中找虚拟地址对应的物理地址，只在为 kstack 找物理地址的时候才需要用，因为其余为直接映射</li><li><code>void uvmunmap(pagetable_t pagetable, uint64 va, uint64 npages, int do_free)</code>: <strong>解除映射</strong>, Remove npages of mappings starting from va. va must be <strong>page-aligned</strong>(4k对齐). The mappings <strong>must exist</strong>.<ul><li>若do_free不为零则会同时释放页表项指向的空间</li></ul></li><li><code>pagetable_t uvmcreate()</code>：创建一个新的用户页表，即为页表开辟空间；超出内存则返回0</li><li><code>void uvminit(pagetable_t pagetable, uchar *src, uint sz)</code>：为第一个进程加载页表；</li><li><code>uint64 uvmalloc(pagetable_t pagetable, uint64 oldsz, uint64 newsz)</code>：对一个增长的进程分配页表项（映射）和物理内存<ul><li>如果 newsz &gt;= oldsz，则在 [oldsz, newsz) 区间内<strong>开辟内存、创建页表并建立映射</strong>。</li><li>Returns new size or 0 on error.</li></ul></li><li><code>uint64 uvmdealloc(pagetable_t pagetable, uint64 oldsz, uint64 newsz)</code>：如果 oldsz &gt; newsz，则将 [newsz, oldsz) 区间内的页表<strong>解除映射并释放页表项指向的空间</strong>；不需要4k对齐<ul><li>返回newsz</li></ul></li><li><strong><code>void uvmfree(pagetable_t pagetable, uint64 sz)</code></strong>：<strong>解除映射、释放页表项指向的空间、释放页表本身</strong>；</li><li><code>int uvmcopy(pagetable_t old, pagetable_t new, uint64 sz)</code>：把父进程的页表和页表项指向的物理空间复制给子进程；<ul><li>用户虚拟地址空间从0开始</li></ul></li><li><code>void uvmclear(pagetable_t pagetable, uint64 va)</code>：把给一个 PTE 标志为 (对用户态失效)，系统调用 exec 用它来设置 guard pages。</li><li><code>int copyout(pagetable_t pagetable, uint64 dstva, char *src, uint64 len)</code>：<ul><li>从内核 copy 给用户地址</li><li>根据pagetable和dstva查找用户物理地址，从src的复制len个字节到该物理地址</li><li>成功返回0，失败返回-1</li></ul></li><li><code>int copyin(pagetable_t pagetable, char *dst, uint64 srcva, uint64 len)</code>：从用户地址 copy 进内核<ul><li>Copy len bytes to dst from virtual address srcva in a given page table.</li><li>Return 0 on success, -1 on error.</li></ul></li><li><code>int copyinstr(pagetable_t pagetable, char *dst, uint64 srcva, uint64 max)</code>：从用户地址 copy 一个字符串进内核<ul><li>Copy bytes to dst from virtual address srcva in a given page table, until a ‘\0’, or max.</li><li>Return 0 on success, -1 on error.</li></ul></li><li><code>void freewalk(pagetable_t pagetable)</code>: 释放页表本身<ul><li>Recursively（递归地） free page-table pages.</li><li>All leaf mappings must already have been removed.</li></ul></li></ul><h3 id="内核页表生命周期">内核页表生命周期</h3><p>为此，我们回顾一下全局内核页表的「生命周期」（这一段在 xv6 book 的 3.3 节有详细阐述）：kernel/main.c 中，main 函数首先调用 <strong>kvminit()</strong> 创建初始全局内核页表（开辟空间+填充初始页表项，除内核栈以外），然后调用 <strong>kvminithart()</strong> 装载全局内核页表，最后调用 <strong>procinit()</strong> 为所有 NPROC 个进程开辟内核栈并重新装载。由于全局内核页表是始终存在的，所以没有释放的操作。</p><ul><li>进程的最大数量为64，一开始便为这64个进程都分配了内核栈（虚拟地址和物理地址）</li></ul><h2 id="lab4-（Lab-page-tables）实现思路">lab4 （Lab: page tables）实现思路</h2><p>不要忘了我们的目的：</p><blockquote><p>共享内核页表中，所有物理地址都和与之完全相等的虚拟地址建立映射，也就是直接映射。这是让内核能够直接以物理地址访问内存的数据，不需要使用任何的虚拟地址。</p><p><strong>但是</strong> ，由于用户地址的映射并未存储于内核页表，如果我们需要处理用户程序传来的虚拟地址（比如系统调用传入的指针），我们需要先找到用户页表(<strong>存于进程控制块中</strong>)，逐个页表项地找到能够翻译对应虚拟地址的页表项后，才可以获取实际的物理地址并进行访问，这叫做软件模拟翻译。软件模拟翻译的实现很复杂，同时，因为需要复杂的查找，还降低了性能。</p><p>所以我们将 <em>用户页表中的内存映射</em> 和 <em>原来共享内核页表中的内存映射</em> 进行合并，这样内核也能够直接对用户的虚拟地址进行访问，而不需要软件模拟翻译。需要注意的是，这是 <strong>任务三和任务二一同</strong> 需要实现的结果，任务二分离出独立页表，任务三利用独立页表去除软件模拟翻译。</p></blockquote><h3 id="任务2：">任务2：</h3><ol><li><p>进程控制块结构体添加:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-type">pagetable_t</span> k_pagetable;<span class="hljs-comment">//独立内核页表</span><br>uint64 kstack_pa;<span class="hljs-comment">//内核栈物理地址</span><br></code></pre></td></tr></table></figure></li><li><p>由于每个进程对应一个独立内核页表，故在allocproc声明进程控制块的同时初始化进程对应的<strong>独立内核页表</strong>（参考kvminit，但不要映射CLINT，对于kvminit内部的kvmmap，可以声明函数pvmmap替换，不能直接调用kvmmap，因为kvmmap的页表默认为共享内核页表）<br>由于内核栈是在整个系统加载时分配空间的(只会分配一次，一次性为64个进程分配，每个进程的内核栈对应的虚拟地址就是在这时初始化的)，故还需将内核栈的虚拟地址和物理地址映射起来填入<strong>独立内核页表</strong>(参考mappages和kvmmap，可以使用之前声明的pvmmap)</p><p>(指导书说，要在procinit中将内核栈物理地址pa拷贝到PCB的成员kstack_pa，其实我不太理解为什么还要有kstack_pa，PCB已经有内核页表k_pagetable和内核虚拟地址kstac了，完全可以据此求出内核栈物理地址kstack_pa)</p></li><li><p>在进程使用前应先将内核空间的根页表的基地址放入SATP寄存器，之前是共享内核页表，只会放一次。而现在我们更改为独立内核页表，则对应页表需要伴随着进程的运行和终止，同步进行独立内核页表的<strong>装入和释放</strong></p><ol><li><p>在scheduler中进程装入cpu准备运行前参照kvminthart，将独立内核页表基地址<strong>载入</strong>，<strong>当进程执行完时，应将全局页表重新装入。</strong></p><blockquote><p><img src="image-20221107213301776.png" alt="image-20221107213301776"></p></blockquote></li><li><p>在freeproc中释放进程控制块时，也将k_pagetable<strong>释放</strong>（解除映射，释放页表对应空间，<strong>不能释放页表项指向的空间</strong>，可以参照freewalk函数进行修改）</p></li></ol></li><li><p>ets：</p><ul><li>vm.c新增函数记得在def.h声明</li><li>各个内核栈的物理地址和虚拟地址在初始化（procinit）时就已经有了，共享页表的映射也已经建立，而独立页表的映射需要等到进程载入cpu才建立</li></ul></li></ol><h3 id="任务3：">任务3：</h3><p>不要忘记目的</p><blockquote><p>xv6目前使用<code>kernel/vm.c</code>中的<code>copyin()/copyinstr()</code>将用户地址空间的数据拷贝至内核地址空间，它们通过软件模拟翻译的方式获取用户空间地址对应的物理地址，然后进行复制（详情见代码注释）。</p><p>任务目标：你需要 <strong>在独立内核页表加上用户地址空间的映射，同时将函数 <code>copyin()/copyinstr()</code> 中的软件模拟地址翻译改成直接访问</strong> ，使得内核能够不必花费大量时间，用软件模拟的方法一步一步遍历页表，而是直接利用硬件</p><h6 id="用户页表和内核页表合并的一个重要前提：地址不重合：">用户页表和内核页表合并的一个重要前提：地址不重合：</h6><img src="image-20221107151125397.png" alt="image-20221107151125397" style="zoom:50%;" /><p>==用户虚拟地址不能超过内核最低的虚拟地址，即 PLIC==</p></blockquote><h4 id="实现步骤与指导书上的差不多：">实现步骤与指导书上的差不多：</h4><ol><li><p>写一个<code>XXX</code>函数把进程的用户页表映射到内核页表中，同时在defs.h中声明</p></li><li><p>用函数 <code>copyin_new()</code> （在 <code>kernel/vmcopyin.c</code>中定义）代替 <code>copyin()</code> （在 <code>kernel/vm.c</code>中定义）。确保程序 <strong>能运行</strong> 之后再用 <code>copyinstr_new()</code> 以代替 <code>copyinstr()</code>。</p><ul><li>可以将<code>copyin_new()</code> 和 <code>copyinstr_new()</code>在defs.h中声明，然后在<code>copyin()</code> 和<code>copyinstr()</code>将代码改为调用对应函数</li></ul></li><li><p>在独立内核页表加上用户页表的映射，以保证刚刚替换的新函数能够使用。注意独立内核页表的用户页表的映射的标志位的选择。标志位User一旦被设置，内核就不能访问该虚拟地址了</p><ul><li><p>两种实现方法：</p><p>（1）把内核页表中页表项的User位均置为0；</p><p>（2）借助RISC-V的<code>sstatus</code>寄存器，如果该寄存器的SUM位（第18位）置为1，那么内核也可以直接访问上述的虚拟地址。大多情况下，该位需要置0。</p></li><li><p>指导书推荐第二种：在调用copyin_new()/ copyinstr_new()之前修改sstatus寄存器的SUM位：<code>w_sstatus(r_sstatus() | SSTATUS_SUM);</code> 在凋用copyin_new()/ copyinstr_new()之后去掉sstatus寄存器的SUM位：<code>w_sstatus(r_sstatus() &amp; ~SSTATUS_SUM);</code></p><p><strong>注意</strong>：<code>SSTATUS_SUM</code>需在riscv.h中声明：<code>#define SSTATUS_SUM (1L &lt;&lt; 18) // Allow kernel to visit user's vitual address</code></p></li></ul></li><li><p>在fork()、exec()和growproc()这三个函数里将改变后的进程页表同步到内核页表中。</p><ol><li>fork：将父进程的页表复制一份给子进程，<strong>子进程的用户页表也要复制并形成独立内核页表</strong></li><li>exec：exec 和 fork 函数不同，exec 的函数原型是 <code>exec(BIN, argv...)</code>。exec 并不额外创建进程，<br>而是在当前进程中直接执行对应的命令和函数。那么就要<strong>替换进程的内容</strong>。其中最重要的，就是替换新的地址空间及内容，用户页表改变，此时独立内核页表需要同步改变</li><li>growproc：随着进程的进行，有的函数执行完毕或者有新的函数执行，此时用户空间会随之增加或减少，用户页表改变，此时独立内核页表需要同步改变（解除映射但<strong>不释放页表项指向的空间</strong>）</li></ol></li><li><p>第一个进程也需要将用户页表映射到内核页表中，见kernel/proc.c: userinit()</p></li></ol><h2 id="Lab-traps">Lab traps</h2><ul><li>Which registers contain arguments to functions? For example, which register holds 13 in main’s call to <code>printf</code>?<ul><li>由 <code>li a2,13</code> 和 <code>li a1,12</code>可知，<code>a1</code>和<code>a2</code>寄存器包含了传递给函数的参数，其中<code>a2</code>寄存器含有<code>main</code>函数传递给<code>printf</code>函数的参数<code>13</code></li></ul></li><li>Where is the call to function <code>f</code> in the assembly code for main? Where is the call to <code>g</code>? (Hint: the compiler may inline functions.)<ul><li>汇编程序中没有直接调用函数<code>f</code>的代码，由<code>li a1,12</code>可知函数<code>f(8)+1</code>的结果直接被计算出来了，说明编译器进行了内联；同时函数<code>g</code>的代码和<code>f</code>一样，说明也进行了内联</li></ul></li><li>At what address is the function <code>printf</code> located?<ul><li>由指令<code>jalr 1528(ra) # 628 &lt;printf&gt;</code>可知，函数<code>printf</code>的地址为<code>0x628</code>  (和之前不太一样？之前是630)</li></ul></li><li>What value is in the register <code>ra</code> just after the <code>jalr</code> to <code>printf</code> in <code>main</code>?<ul><li><code>jalr</code> 会将 pc+4 存储给指定的寄存器 ra，所以 ra=<code>0x38</code>。</li></ul></li><li>Run the following code.</li></ul><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs perl">unsigned <span class="hljs-keyword">int</span> i = <span class="hljs-number">0x00646c72</span>;<br><span class="hljs-keyword">printf</span>(<span class="hljs-string">&quot;H%x Wo%s&quot;</span>, <span class="hljs-number">57616</span>, &amp;i);<br>     <br></code></pre></td></tr></table></figure><p>What is the output? <a href="http://web.cs.mun.ca/~michael/c/ascii-table.html">Here’s an ASCII table</a> that maps bytes to characters.</p><p>The output depends on that fact that the RISC-V is little-endian. If the RISC-V were instead big-endian what would you set <code>i</code> to in order to yield the same output? Would you need to change <code>57616</code> to a different value?</p><p><a href="http://www.webopedia.com/TERM/b/big_endian.html">Here’s a description of little- and big-endian</a> and <a href="http://www.networksorcery.com/enp/ien/ien137.txt">a more whimsical description</a>.</p><p>输出为<code>He110 World</code>，<code>%x</code>表示以十六进制进行输出，<code>57616</code>对应的16进制为<code>e110</code>，结合前面的<code>H</code>便形成<code>He110</code>；在ASCALL码中<code>0x64</code>对应<code>d</code>，<code>0x6d</code>对应<code>l</code>，<code>0x72</code>对应<code>r</code>，由于RIAC-V采用的是小端对齐，所以会依次读出<code>0x72(r)</code>、<code>0x6d(l)</code>、<code>0x64(d)</code>，结合前面的<code>Wo</code>形成<code>World</code></p><p>如果采用大端对齐，<code>57616</code>不用改变，<code>0x00646c72</code>需改为<code>0x726c6400</code></p><ul><li>In the following code, what is going to be printed after <code>'y='</code>? (note: the answer is not a specific value.) Why does this happen?</li></ul><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">printf</span>(<span class="hljs-string">&quot;x=%d y=%d&quot;</span>, <span class="hljs-number">3</span>);<br></code></pre></td></tr></table></figure><p>y对应的是寄存器a2的值，由于没有提前给a2赋值，所以这个值是不确定的</p><h3 id="backtrace">backtrace</h3><p><img src="image-20221126165102082.png" alt="image-20221126165102082"></p><h3 id="Alarm">Alarm</h3><h5 id="1">(1)</h5><p>在本练习中，您将向 xv6添加一个特性，该特性会在进程使用 CPU 时间时定期发出警报。这对于希望限制占用 CPU 时间的计算绑定进程或希望进行计算但也希望采取某些周期性操作的进程可能很有用。更一般地说，您将实现用户级中断/错误处理程序的基本形式; 例如，您可以使用类似的东西来处理应用程序中的页面错误。如果您的解决方案通过了警报测试和用户测试，那么它就是正确的。</p><p>您应该添加一个新的信号警报(间隔、处理程序)系统调用。如果应用程序调用 sigAlarm (n，fn) ，那么在程序消耗的每 n 个 CPU 时间之后，内核应该调用应用程序函数 fn。当 fn 返回时，应用程序应该从停止的地方恢复。在 xv6中，clock是一个相当任意的时间单位，由硬件计时器生成中断的频率决定。如果一个应用程序调用 sigAlarm (0,0) ，内核应该停止生成周期性的警报调用。</p><p><a href="https://pdos.csail.mit.edu/6.S081/2020/labs/traps.html">xv6的指导书非常详细</a></p><h5 id="2">(2)</h5><p>在完成test0之后，其实忽略了一个重要的问题，报出alarm之后，应该恢复上下文寄存器，继续执行时钟中断前的指令</p><p><strong>实现方法：</strong></p><ul><li>可以在满足ticks数后，在usertrap将整个p-&gt;trapframe保存起来（在proc中添加成员save_trapframe）；</li><li>执行系统调用sigreturn时再进行恢复trapframe；同时释放save_trapframe</li><li>注意：为了防止重复进入handler，需要在usertrap进行操作前判断save_trapframe是否为0，若不是则说明有handle函数正在执行</li></ul><p><img src="image-20221217154829656.png" alt="image-20221217154829656"></p><h2 id="Lab-Lazy">Lab Lazy</h2><p>O/S 可以对页表硬件使用的许多巧妙技巧之一是用户空间堆内存的惰性分配。Xv6应用程序使用 sbrk ()系统调用请求内核提供堆内存。在我们提供的内核中，sbrk ()分配物理内存并将其映射到进程的虚拟地址空间。内核为大型请求分配和映射内存可能需要很长时间。例如，假设一个 GB 包含262,144个4096字节的页面; 这是一个巨大的分配数量，即使每个页面都很小。此外，有些程序分配的内存比实际使用的要多(例如，实现稀疏数组) ，或者在使用之前很早就分配了内存。为了让 sbrk ()在这种情况下能够更快地完成，复杂的内核会延迟地分配用户内存。也就是说，sbrk ()不分配物理内存，只是记住分配了哪些用户地址，并在用户页表中将这些地址标记为无效。当进程首次尝试使用任何给定的延迟分配内存页面时，CPU 会生成一个页面错误，内核通过分配物理内存、对其用0填充并映射来处理该错误。您将在这个实验中向 xv6添加这个惰性分配特性。</p><h3 id="1-Eliminate-allocation-from-sbrk-easy">1. Eliminate allocation from sbrk() (<a href="https://pdos.csail.mit.edu/6.S081/2020/labs/guidance.html">easy</a>)</h3><blockquote><p>消除来自sbrk()的分配</p><p>Your first task is to delete page allocation from the sbrk(n) system call implementation, which is the function sys_sbrk() in sysproc.c. The sbrk(n) system call grows the process’s memory size by n bytes, and then returns the start of the newly allocated region (i.e., the old size). Your new sbrk(n) should just increment the process’s size (myproc()-&gt;sz) by n and return the old size. It should not allocate memory – so you should delete the call to growproc() (but you still need to increase the process’s size!).</p><p>简单说，就是sys_sbrk()函数中只声明大小，而不实际分配空间</p></blockquote><h3 id="2-Lazy-allocation-moderate">2. Lazy allocation (<a href="https://pdos.csail.mit.edu/6.S081/2020/labs/guidance.html">moderate</a>)</h3><p>Modify the code in trap.c to respond to a page fault from user space by mapping a newly-allocated page of physical memory at the faulting address, and then returning back to user space to let the process continue executing. You should add your code just before the <code>printf</code> call that produced the “usertrap(): …” message. Modify whatever other xv6 kernel code you need to in order to get <code>echo hi</code> to work.</p><p>Here are some hints:</p><ul><li>You can check whether a fault is a page fault by seeing if r_scause() is 13 or 15 in usertrap().</li><li><code>r_stval()</code> returns the RISC-V <code>stval</code> register, which contains the virtual address that caused the page fault.</li><li>Steal code from uvmalloc() in vm.c, which is what sbrk() calls (via growproc()). You’ll need to call kalloc() and mappages().</li><li>Use PGROUNDDOWN(va) to round the faulting virtual address down to a page boundary.</li><li>uvmunmap() will panic; modify it to not panic if some pages aren’t mapped.<ul><li>还需要更改 uvmunmap 的内容，这是因为加入懒分配之后，uvmunmap 可能会被要求解除本就不存在的映射、或者去找还没有创建的 pte。在原本的写法中这样会 panic，因此，我们要把 panic 改掉</li></ul></li></ul><p>If all goes well, your lazy allocation code should result in <code>echo hi</code> working. You should get at least one page fault (and thus lazy allocation), and perhaps two.</p><h3 id="3-Lazytests-and-Usertests-moderate">3. Lazytests and Usertests (<a href="https://pdos.csail.mit.edu/6.S081/2020/labs/guidance.html">moderate</a>)</h3><p>完成2之后任务远没完成</p><p>We’ve supplied you with <code>lazytests</code>, an xv6 user program that tests some specific situations that may stress your lazy memory allocator. Modify your kernel code so that all of both <code>lazytests</code> and <code>usertests</code> pass.</p><ol><li>Handle negative sbrk() arguments. （处理负的sbrk()参数）<ul><li>解除映射（参照growproc()）</li></ul></li><li>Kill a process if it page-faults on a virtual memory address higher than any allocated with sbrk().（如果缺页错误的虚拟地址高于任何sbrk()分配的内存地址，则杀死进程）<ul><li>va需要小于p-&gt;sz</li></ul></li><li>Handle the parent-to-child memory copy in fork() correctly.（在fork()中正确处理父进程到子进程的内存复制）</li><li>Handle the case in which a process passes a valid address from sbrk() to a system call such as read or write, but the memory for that address has not yet been allocated.（系统调用时，地址有效，但内存还没被分配）<ul><li>trap发生的三种情况：系统调用、中断、异常；在惰性分配中，我们目前只考虑了缺页异常的情况，并在缺页时分配空间，但是，系统调用时也可能遇到未分配空间的情况，故也需要在系统调用时考虑内存是否已分配，若未分配，则需同之前一样进行分配空间。</li><li><code>uint64 walkaddr(pagetable_t pagetable, uint64 va)</code>：在指定的用户页表中找虚拟地址对应的物理地址，如果页表不存在/映射不存在返回 0</li></ul></li><li>Handle out-of-memory correctly: if kalloc() fails in the page fault handler, kill the current process.（正常处理内存溢出情况：kalloc()失败，则杀死当前进程）</li><li>Handle faults on the invalid page below the user stack.（处理缺页错误中访问用户栈下的非法空间）<ul><li>va必须大于p-&gt;trapframe-&gt;sp（如下）</li><li><img src="ed2dd5a8fadf4f21a65ae55635a378d1.png" alt="在这里插入图片描述"></li><li>实际上，在本次实验中，<strong>我们关注的是heap的惰性分配</strong>，这也是为什么在上面第3点要求中，不能直接在fork内将uvmcopy给注释掉</li></ul></li></ol><h2 id="Lab-COW">Lab COW</h2><p>虚拟内存提供了一定程度的间接性: 内核可以通过将 PTE 标记为无效或只读来拦截内存引用，从而导致页错误，并且可以通过修改 PTE 来更改地址的含义。在计算机系统中有这样一种说法: 任何系统问题都可以通过一定程度的间接来解决。惰性分配实验提供了一个例子。本次实验中我们尝试另一个例子: copy-on write fork</p><h3 id="problem">problem</h3><p>Xv6中的 fork ()系统调用将父进程的所有用户空间内存复制到子进程中。如果父进程很大，复制可能需要很长时间。更糟糕的是，这些工作通常被大量浪费; 例如，子代中的 fork ()后跟 exec ()将导致子代丢弃复制的内存，而且可能从未使用过大部分内存。另一方面，如果父级和子级都使用一个页面，并且其中一个或两个都写入该页面，则确实需要一个副本。</p><p>写时复制(copy-on-write，COW) fork ()的目标是将分配和复制子内存页的时间推迟到实际需要复制的时候(如果需要的话)。</p><p>COW fork ()只为子级创建一个页表，用于用户内存的 PTE 指向父级的物理页面。COW fork ()将父级和子级中的所有用户 PTE 都标记为不可写。当任何一个进程尝试编写这些 COW 页面中的一个时，CPU 将强制出现页面错误。内核页面错误处理程序检测到这种情况，为错误进程分配一个物理内存页面，将原始页面复制到新页面，并在错误进程中修改相关的 PTE 以引用新页面，这一次 PTE 标记为可写。当页面错误处理程序返回时，用户进程将能够编写这个复制过来的页面。</p><p>COW fork ()使得释放实现用户内存的物理页变得有点棘手。给定的物理页可以由多个进程的页表引用，并且只有在最后一个引用消失时才应该释放。</p><h3 id="test">test</h3><p>To help you test your implementation, we’ve provided an xv6 program called cowtest (source in user/cowtest.c). cowtest runs various tests, but even the first will fail on unmodified xv6. Thus, initially, you will see:</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-variable">$ </span>cowtest<br><span class="hljs-symbol">simple:</span> fork() failed<br><span class="hljs-variable">$ </span><br></code></pre></td></tr></table></figure><p><strong>The “simple” test allocates ==more than half of available physical memory==, and then fork()s. The fork fails because there is not enough free physical memory to give the child a complete copy of the parent’s memory.</strong></p><p>When you are done, your kernel should pass all the tests in both cowtest and usertests. That is:</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">$ cowtest<br>simple: ok<br>simple: ok<br>three: zombie!<br>ok<br>three: zombie!<br>ok<br>three: zombie!<br>ok<br>file: ok<br>ALL COW TESTS PASSED<br>$ usertests<br>...<br>ALL TESTS PASSED<br>$<br></code></pre></td></tr></table></figure><h3 id="Implement-copy-on-write-hard">Implement copy-on write(<a href="https://pdos.csail.mit.edu/6.828/2020/labs/guidance.html">hard</a>)</h3><p>Here’s a reasonable plan of attack.</p><ol><li><p>Modify uvmcopy() to map the parent’s physical pages into the child, instead of allocating new pages. Clear <code>PTE_W</code> in the PTEs of both child and parent.</p></li><li><p>Modify usertrap() to recognize page faults. When a page-fault occurs on a COW page, allocate a new page with kalloc(), copy the old page to the new page, and install the new page in the PTE with <code>PTE_W</code> set.</p><ul><li>分配物理页</li><li>复制内容, 更新页表项</li><li>修改PTE_W和PTE_COW，释放原本的pa</li></ul></li><li><p>Ensure that each physical page is freed when the last PTE reference to it goes away – but not before. A good way to do this is to keep, for each physical page, a “reference count” of the number of user page tables that refer to that page. Set a page’s reference count to one when <code>kalloc()</code> allocates it. Increment a page’s reference count when fork causes a child to share the page, and decrement a page’s count each time any process drops the page from its page table. <code>kfree()</code> should only place a page back on the free list if its reference count is zero. It’s OK to to keep these counts in a fixed-size array of integers. You’ll have to work out a scheme for how to index the array and how to choose its size. For example, you could index the array with the page’s physical address divided by 4096, and give the array a number of elements equal to highest physical address of any page placed on the free list by <code>kinit()</code> in kalloc.c.</p><ul><li>为了判断何时回收物理页，需要一个应用计数（以下用count表示），当kalloc()时，count置一；当fork时，count++；当页面从页表销毁时，count–；只有count=0，kfree()才将页面放到空闲链表中</li><li>例如，您可以使用页面的物理地址除以4096来索引数组，并在 kalloc.c 中通过 kinit ()初始化数组</li><li><a href="https://www.jianshu.com/p/a9d7c6960ee7">xv6中内核物理内存占用区间</a>：KERNBASE 指的是物理内存的起始地址， PHYSTOP 是 xv6 的物理内存终止地址</li></ul></li><li><p>Modify copyout() to use the same scheme as page faults when it encounters a COW page.</p></li></ol><p>Some hints:</p><ul><li><p>The lazy page allocation lab has likely made you familiar with much of the xv6 kernel code that’s relevant for copy-on-write. However, you should not base this lab on your lazy allocation solution; instead, please start with a fresh copy of xv6 as directed above.</p></li><li><p>It may be useful to have a way to record, for each PTE, whether it is a COW mapping. You can use the RSW (reserved for software) bits in the RISC-V PTE for this.</p><ul><li>使用 RISC-V PTE 中的 RSW（保留位）来标志PTE是否为COW映射</li><li><img src="image-20221206162936454.png" alt="image-20221206162936454"></li></ul></li><li><p><code>usertests</code> explores scenarios that <code>cowtest</code> does not test, so don’t forget to check that all tests pass for both.</p></li><li><p>Some helpful macros and definitions for page table flags are at the end of <code>kernel/riscv.h</code>.</p></li><li><p>If a COW page fault occurs and there’s no free memory, the process should be killed.</p></li><li><p>etc：两个大坑，耗费了我很长时间，严重怀疑自己</p><ul><li><p>在cow分配页面后记得修改pte</p></li><li><p>我们只需对写页面错误进行处理，即在trap中只需判断<code>r_scause() == 15</code>，而无需判断是否等于13（这与lazy allocation不同，不要画蛇添足），虽然关系不大</p><img src="image-20221207143827786.png" alt="image-20221207143827786" style="zoom: 67%;" /></li><li><p>在用锁的时候要特别特别注意。出现一些玄学操作往往都是锁的问题</p></li></ul></li></ul><p><img src="image-20221207145255382.png" alt="image-20221207145255382"></p><h2 id="Lab-Multithreading">Lab: Multithreading</h2><p>In this exercise you will design the context switch mechanism for a user-level threading system, and then implement it. To get you started, your xv6 has two files <code>user/uthread.c</code> and <code>user/uthread_switch.S</code>, and a rule in the Makefile to build a uthread program. uthread.c contains most of a user-level threading package, and code for three simple test threads. The threading package is missing some of the code to create a thread and to switch between threads.</p><p>简单说，就是实现用户级多线程，提出一个创建线程和保存/恢复寄存器的方法，以便在线程之间切换</p><h3 id="1-Uthread-switching-between-threads-moderate">1. Uthread: switching between threads (<a href="https://pdos.csail.mit.edu/6.828/2020/labs/guidance.html">moderate</a>)</h3><p>基本上就是仿照内核中的上下文切换</p><ul><li>和内核中进程调度一样，定义一个context，包含ra、sp、和各种被调用者需要保存的寄存器</li><li>将kernel/swtch.S的内容复制到user/uthread_switch.S</li><li>在thread_schefule()中调用uthread_switch进行上下文切换，从而实现线程切换</li><li>在thread_create()中将传入的函数指针赋值给ra，这样就可以在进程被调度时执行指定函数。把栈指针赋值到sp，由于<strong>栈空间是从大到小的</strong>，所以赋值的应该是栈的末尾指针</li></ul><h3 id="2-Using-threads-moderate">2. Using threads (<a href="https://pdos.csail.mit.edu/6.828/2020/labs/guidance.html">moderate</a>)</h3><ul><li><p>问题：The file <code>notxv6/ph.c</code> contains a simple hash table that is correct if used from a single thread, but incorrect when used from multiple threads</p></li><li><p>编译和运行：这里用的不是xv6，而是远程平台上的gcc</p><ul><li><pre><code class="language-sh">$ make ph$ ./ph 1# 数字表示线程数<figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><br>- 简单来说就是多线程读写出现不同步，需要利用UNIX pthread的线程库加锁<br><br>  - ```c<br>    pthread_mutex_t <span class="hljs-keyword">lock</span>;            // <span class="hljs-keyword">declare</span> a <span class="hljs-keyword">lock</span><br>    pthread_mutex_init(&amp;<span class="hljs-keyword">lock</span>, <span class="hljs-keyword">NULL</span>); // initialize the <span class="hljs-keyword">lock</span><br>    pthread_mutex_lock(&amp;<span class="hljs-keyword">lock</span>);       // acquire <span class="hljs-keyword">lock</span><br>    pthread_mutex_unlock(&amp;<span class="hljs-keyword">lock</span>);     // <span class="hljs-keyword">release</span> <span class="hljs-keyword">lock</span><br></code></pre></td></tr></table></figure></code></pre></li></ul></li><li><p>哈希桶：There are situations where concurrent <code>put()</code>s have no overlap(重叠) in the memory they read or write in the hash table, and thus don’t need a lock to protect against each other. Can you change <code>ph.c</code> to take advantage of such situations to obtain parallel speedup for some <code>put()</code>s?==Hint: how about a lock per hash bucket?==</p></li></ul><h3 id="3-Barrier-moderate">3. Barrier(<a href="https://pdos.csail.mit.edu/6.828/2020/labs/guidance.html">moderate</a>)</h3><ul><li><p>问题：将所有线程堵到一个点，我们期望所有线程都调用了 barrier() 之后才能继续执行。：In this assignment you’ll implement a <a href="http://en.wikipedia.org/wiki/Barrier_(computer_science)">barrier</a>: a point in an application at which all participating threads must wait until all other participating threads reach that point too. You’ll use pthread condition variables, which are a sequence coordination technique similar to xv6’s sleep and wakeup.</p></li><li><p>编译和运行：同2</p></li><li><p>更多线程库接口</p><ul><li><pre><code class="language-c">pthread_cond_wait(&amp;cond, &amp;mutex);  // go to sleep on cond, releasing lock mutex, acquiring upon wake up// wait 中进入后release lock mutex，出来前acquire lock mutex的原因就是，要保证该进程可被唤醒pthread_cond_broadcast(&amp;cond);     // wake up every thread sleeping on cond<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><br>- There are two issues <span class="hljs-keyword">that</span> complicate your task:<br><br>  - You have <span class="hljs-keyword">to</span> deal <span class="hljs-keyword">with</span> a succession <span class="hljs-keyword">of</span> barrier calls, each <span class="hljs-keyword">of</span> which we&#x27;ll call a <span class="hljs-built_in">round</span>. `bstate.<span class="hljs-built_in">round</span>` records <span class="hljs-keyword">the</span> current <span class="hljs-built_in">round</span>. You should increment `bstate.<span class="hljs-built_in">round</span>` each <span class="hljs-built_in">time</span> all threads have reached <span class="hljs-keyword">the</span> barrier.（所有进程到达barrier时，增加<span class="hljs-built_in">round</span>）<br>  - You have <span class="hljs-keyword">to</span> handle <span class="hljs-keyword">the</span> case <span class="hljs-keyword">in</span> which one thread races <span class="hljs-keyword">around</span> <span class="hljs-keyword">the</span> loop <span class="hljs-keyword">before</span> <span class="hljs-keyword">the</span> others have exited <span class="hljs-keyword">the</span> barrier. In particular, you are re-using <span class="hljs-keyword">the</span> `bstate.nthread` variable <span class="hljs-keyword">from</span> one <span class="hljs-built_in">round</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">the</span> next. Make sure <span class="hljs-keyword">that</span> a thread <span class="hljs-keyword">that</span> leaves <span class="hljs-keyword">the</span> barrier <span class="hljs-keyword">and</span> races <span class="hljs-keyword">around</span> <span class="hljs-keyword">the</span> loop doesn&#x27;t increase `bstate.nthread` <span class="hljs-keyword">while</span> a previous <span class="hljs-built_in">round</span> <span class="hljs-keyword">is</span> still using <span class="hljs-keyword">it</span>.（barrier.nthread要记得更新）<br><br>![image<span class="hljs-number">-20221213164316684</span>](image<span class="hljs-number">-20221213164316684.</span>png)<br><br><span class="hljs-comment">## Lab fs</span><br><br><span class="hljs-comment">### 前置知识：</span><br><br>![image<span class="hljs-number">-20221213202906528</span>](image<span class="hljs-number">-20221213202906528.</span>png)<br><br>- <span class="hljs-built_in">log</span><br><br>  - xv6 通过简单的日志系统来解决文件操作过程当中崩溃所导致的问题。一个系统调用并不直接导致对磁盘上文件系统的写操作，相反，他会把一个对磁盘写操作的描述包装成一个日志写在磁盘中。当系统调用把所有的写操作都写入了日志，它就会写一个特殊的提交记录到磁盘上，代表一次完整的操作。从那时起，系统调用就会把日志中的数据写入磁盘文件系统的数据结构中。在那些写操作都成功完成后，系统调用就会删除磁盘上的日志文件。<br><br>    为什么日志可以解决文件系统操作中出现的崩溃呢？如果崩溃发生在操作提交之前，那么磁盘上的日志文件就不会被标记为已完成，恢复系统的代码就会忽视它，磁盘的状态正如这个操作从未执行过一样。如果是在操作提交之后崩溃的，恢复程序会重演所有的写操作，可能会重复之前已经进行了的对磁盘文件系统的写操作。==在任何一种情况下，日志文件都使得磁盘操作对于系统崩溃来说是原子操作：在恢复之后，要么所有的写操作都完成了，要么一个写操作都没有完成。==<br><br>  - 组成<span class="hljs-built_in">log</span> 分为头快和<span class="hljs-built_in">log</span>块，头快包含各<span class="hljs-built_in">log</span>块的信息<br><br>- inode<br><br>  - ![img](p2.png)<br><br>    存在直接索引和一级索引。inode结构体中的addr有<span class="hljs-number">13</span>个元素（包含<span class="hljs-number">12</span>个直接索引和一个简介所以）<br><br>  - [操作inode](<span class="hljs-comment">#操作inode的过程)</span><br><br>- 目录：<br><br>  - 目录项dirent：包含一个名称`<span class="hljs-built_in">name</span>`和一个inode编号`inum`，inode编号为零的条目是空的。<br><br>  - 函数`dirlookup`（***kernel/fs.c\***:<span class="hljs-number">527</span>）`struct inode* dirlookup(struct inode *dp, char *<span class="hljs-built_in">name</span>, uint *poff)`<br><br>    在目录中搜索具有给定名称的条目。如果找到一个，它将返回一个指向相应inode的指针，解开锁定，并将`*poff`设置为目录中条目的字节偏移量，以满足调用方希望对其进行编辑的情形。<br><br>  - 函数`dirlink`（***kernel/fs.c\***:<span class="hljs-number">554</span>）`dirlink(struct inode *dp, char *<span class="hljs-built_in">name</span>, uint inum)`<br><br>    将给定名称和inode编号的新目录条目写入目录`dp`<br><br>- 文件<br><br>  - 三种类型：管道、inode、设备<br>  - 系统中所有打开的文件都保存在全局文件表`ftable`中<br>  - 读取和写入偏移量以原子方式更新（上锁之后写入之前更新文件偏移量），因此，对同一文件的同时多次写入不能覆盖彼此的数据，尽管他们的写入最终可能是交错的<br><br><br><span class="hljs-comment">### 1. Large files ([moderate](https://pdos.csail.mit.edu/6.828/2020/labs/guidance.html))</span><br><br>- 问题：In this assignment you&#x27;ll increase <span class="hljs-keyword">the</span> maximum size <span class="hljs-keyword">of</span> an xv6 <span class="hljs-built_in">file</span>. Currently xv6 files are limited <span class="hljs-keyword">to</span> <span class="hljs-number">268</span> blocks, <span class="hljs-keyword">or</span> <span class="hljs-number">268</span>*BSIZE bytes (BSIZE <span class="hljs-keyword">is</span> <span class="hljs-number">1024</span> <span class="hljs-keyword">in</span> xv6). This limit comes <span class="hljs-keyword">from</span> <span class="hljs-keyword">the</span> fact <span class="hljs-keyword">that</span> an xv6 inode <span class="hljs-keyword">contains</span> <span class="hljs-number">12</span> <span class="hljs-string">&quot;direct&quot;</span> block numbers <span class="hljs-keyword">and</span> one <span class="hljs-string">&quot;singly-indirect&quot;</span> block <span class="hljs-built_in">number</span>, which refers <span class="hljs-keyword">to</span> a block <span class="hljs-keyword">that</span> holds up <span class="hljs-keyword">to</span> <span class="hljs-number">256</span> more block numbers, <span class="hljs-keyword">for</span> a total <span class="hljs-keyword">of</span> <span class="hljs-number">12</span>+<span class="hljs-number">256</span>=<span class="hljs-number">268</span> blocks.（原本直接索引+间接索引只有<span class="hljs-number">268</span>块，现在要增加）<br><br>- 任务：You&#x27;ll change <span class="hljs-keyword">the</span> xv6 <span class="hljs-built_in">file</span> system code <span class="hljs-keyword">to</span> support a <span class="hljs-string">&quot;doubly-indirect&quot;</span> block <span class="hljs-keyword">in</span> each inode, containing <span class="hljs-number">256</span> addresses <span class="hljs-keyword">of</span> singly-indirect blocks, each <span class="hljs-keyword">of</span> which can <span class="hljs-keyword">contain</span> up <span class="hljs-keyword">to</span> <span class="hljs-number">256</span> addresses <span class="hljs-keyword">of</span> data blocks. The <span class="hljs-literal">result</span> will be <span class="hljs-keyword">that</span> a <span class="hljs-built_in">file</span> will be able <span class="hljs-keyword">to</span> consist <span class="hljs-keyword">of</span> up <span class="hljs-keyword">to</span> <span class="hljs-number">65803</span> blocks, <span class="hljs-keyword">or</span> <span class="hljs-number">256</span>*<span class="hljs-number">256</span>+<span class="hljs-number">256</span>+<span class="hljs-number">11</span> blocks (<span class="hljs-number">11</span> <span class="hljs-keyword">instead of</span> <span class="hljs-number">12</span>, because we will sacrifice one <span class="hljs-keyword">of</span> <span class="hljs-keyword">the</span> direct block numbers <span class="hljs-keyword">for</span> <span class="hljs-keyword">the</span> double-indirect block). （原本是直接索引+间接索引；现在改为直接索引+一级索引+二级索引）<br><br>  大小变为：<span class="hljs-number">256</span>*<span class="hljs-number">256</span>+<span class="hljs-number">256</span>+<span class="hljs-number">11</span>=<span class="hljs-number">65803</span>块<br><br>- mkfs<br><br>  The `mkfs` program creates <span class="hljs-keyword">the</span> xv6 <span class="hljs-built_in">file</span> system disk image <span class="hljs-keyword">and</span> determines how many total blocks <span class="hljs-keyword">the</span> <span class="hljs-built_in">file</span> system has; this size <span class="hljs-keyword">is</span> controlled <span class="hljs-keyword">by</span> `FSSIZE` <span class="hljs-keyword">in</span> `kernel/param.h`. You&#x27;ll see <span class="hljs-keyword">that</span> `FSSIZE` <span class="hljs-keyword">in</span> <span class="hljs-keyword">the</span> repository <span class="hljs-keyword">for</span> this lab <span class="hljs-keyword">is</span> <span class="hljs-keyword">set</span> <span class="hljs-keyword">to</span> <span class="hljs-number">200</span>,<span class="hljs-number">000</span> blocks. You should see <span class="hljs-keyword">the</span> following output <span class="hljs-keyword">from</span> `mkfs/mkfs` <span class="hljs-keyword">in</span> <span class="hljs-keyword">the</span> make output:<br><br>  ```sh<br>  nmeta <span class="hljs-number">70</span> (boot, super, <span class="hljs-built_in">log</span> blocks <span class="hljs-number">30</span> inode blocks <span class="hljs-number">13</span>, bitmap blocks <span class="hljs-number">25</span>) blocks <span class="hljs-number">199930</span> total <span class="hljs-number">200000</span><br></code></pre></td></tr></table></figure></code></pre></li></ul><p>这一行描述了 mkfs/mkfs 构建的文件系统: 它有70个元数据块(用于描述文件系统的块)和199,930个数据块，总共200,000个块。如果在实验中的任何时候，您发现自己必须从头重新构建文件系统，那么可以运行 make clean 命令来重新构建 fs.img。</p></li><li><p>Hints</p><ul><li>Make sure you understand <code>bmap()</code>. Write out a diagram of the relationships between <code>ip-&gt;addrs[]</code>, the indirect block, the doubly-indirect block and the singly-indirect blocks it points to, and data blocks. Make sure you understand why adding a doubly-indirect block increases the maximum file size by 256*256 blocks (really -1, since you have to decrease the number of direct blocks by one).</li><li>Think about how you’ll index the doubly-indirect block, and the indirect blocks it points to, with the logical block number.</li><li>If you change the definition of <code>NDIRECT</code>, you’ll probably have to change the declaration of <code>addrs[]</code> in <code>struct inode</code> in <code>file.h</code>. Make sure that <code>struct inode</code> and <code>struct dinode</code> have the same number of elements in their <code>addrs[]</code> arrays.</li><li>If you change the definition of <code>NDIRECT</code>, make sure to create a new <code>fs.img</code>, since <code>mkfs</code> uses <code>NDIRECT</code> to build the file system.</li><li>If your file system gets into a bad state, perhaps by crashing, delete <code>fs.img</code> (do this from Unix, not xv6). <code>make</code> will build a new clean file system image for you.</li><li>Don’t forget to <code>brelse()</code> each block that you <code>bread()</code>.</li><li>You should allocate indirect blocks and doubly-indirect blocks only as needed, like the original <code>bmap()</code>.</li><li>Make sure <code>itrunc</code> frees all blocks of a file, including double-indirect blocks.</li></ul></li><li><p>步骤：</p><ul><li>修改NDIRECT为11，并相应修改dinode和inode结构体</li><li>修改一个文件的最多块数：MAXFILE</li><li>修改bmap和itrunc</li></ul></li></ul><h3 id="2-Symbolic-links-moderate">2. Symbolic links (<a href="https://pdos.csail.mit.edu/6.828/2020/labs/guidance.html">moderate</a>)</h3><ul><li><p>问题：在本练习中，您将向 xv6添加符号链接。符号链接(或软链接)通过路径名称引用链接文件; 当打开一个符号链接时，内核会跟随指向引用文件的链接。符号链接类似于硬链接，但硬链接仅限于指向同一磁盘上的文件，而符号链接可以跨磁盘设备。尽管 xv6不支持多个设备，但是实现这个系统调用是了解路径名查找如何工作的一个很好的练习。</p><p><img src="image-20221215141355827.png" alt="image-20221215141355827"></p></li><li><p>任务：You will implement the <code>symlink(char *target, char *path)</code> system call, which creates a new symbolic link at path that refers to file named by target. For further information, see the man page symlink. To test, add symlinktest to the Makefile and run it. Your solution is complete when the tests produce the following output (including usertests succeeding).</p></li><li><p>hints：</p><ul><li>First, create a new system call number for symlink, add an entry to user/usys.pl, user/user.h, and implement an empty sys_symlink in kernel/sysfile.c.</li><li>Add a new file type (<code>T_SYMLINK</code>) to kernel/stat.h to represent a symbolic link.</li><li>Add a new flag to kernel/fcntl.h, (<code>O_NOFOLLOW</code>), that can be used with the <code>open</code> system call. Note that flags passed to <code>open</code> are combined using a bitwise OR operator, so your new flag should not overlap with any existing flags. This will let you compile user/symlinktest.c once you add it to the Makefile.</li><li>Implement the <code>symlink(target, path)</code> system call to create a new symbolic link at path that refers to target. Note that target does not need to exist for the system call to succeed. You will need to choose somewhere to store the target path of a symbolic link, for example, in the inode’s data blocks. <code>symlink</code> should return an integer representing success (0) or failure (-1) similar to <code>link</code> and <code>unlink</code>.</li><li>Modify the <code>open</code> system call to handle the case where the path refers to a symbolic link. If the file does not exist, <code>open</code> must fail. When a process specifies <code>O_NOFOLLOW</code> in the flags to <code>open</code>, <code>open</code> should open the symlink (and not follow the symbolic link).</li><li>If the linked file is also a symbolic link, you must recursively follow it until a non-link file is reached. If the links form a cycle, you must return an error code. You may approximate this by returning an error code if the depth of links reaches some threshold (e.g., 10).</li><li>Other system calls (e.g., link and unlink) must not follow symbolic links; these system calls operate on the symbolic link itself.</li><li>You do not have to handle symbolic links to directories for this lab.</li></ul></li><li><p>其实只需要修改sys_open和sys_symlink函数，注意事项hints已列出，其余在代码中也有注释</p></li></ul><h3 id="3-make-grade">3. make grade</h3><ul><li><strong>注意make grade的bigfile测试会很慢，如果qemu里能通过但make grade时timeout，记得修改grade-lab-fs的timeout参数</strong></li><li><img src="image-20221215151646981.png" alt="image-20221215151646981"></li></ul><h2 id="Lab-Mmap">Lab Mmap</h2><ul><li><p>问题：Mmap 和 munmap 系统调用允许 UNIX 程序对其地址空间进行详细的控制。它们可以用来在进程之间共享内存，<strong>将文件映射到进程地址空间</strong>，以及作为用户级页面错误方案的一部分，如本课讨论的垃圾收集算法。在这个实验中，您将向 xv6添加 mmap 和 munmap，重点是内存映射文件。</p><ul><li><strong>mmap()系统调用使得进程之间通过映射同一个普通文件实现共享内存。普通文件被映射到进程地址空间后，进程可以像访问普通内存一样对文件进行访问，不必再调用read()，write（）等操作。</strong><a href="https://baike.baidu.com/item/mmap/1322217?fr=aladdin">Mmap</a></li></ul></li><li><p>任务：实现mmap和munmap两个系统调用：</p><ul><li><p><strong>mmap()系统调用</strong>：<code>void* mmap ( void *addr, int length, int prot , int flags, int fd, int offset )</code></p><p>参数fd为即将映射到进程空间的文件描述字，一般由open()返回。length是映射到调用进程地址空间的字节数，它从被映射文件开头offset个字节开始算起（<strong>本次实验可假设为0</strong>）。prot 参数指定共享内存的访问权限。可取如下几个值的或：<strong>PROT_READ（可读） , PROT_WRITE （可写）</strong>, （PROT_EXEC （可执行）, PROT_NONE（不可访问））。flags由以下几个常值指定：<strong>MAP_SHARED , MAP_PRIVATE</strong>，其中，MAP_SHARED , MAP_PRIVATE必选其一。offset参数一般设为0（<strong>本实验假设为0</strong>），表示从文件头开始映射。参数addr指定文件应被映射到进程空间的起始地址，一般被指定一个空指针，此时选择起始地址的任务留给内核来完成。函数的返回值为最后文件映射到进程空间的地址，进程可直接操作起始地址为该值的有效地址。(失败则返回0xffffffffffffffff )</p></li><li><p><strong>系统调用munmap()</strong>：<code>int munmap( void * addr, int length )</code></p><p>该调用在进程地址空间中解除一个映射关系，addr是调用mmap()时返回的地址，length是映射区的大小。当映射关系解除后，对原来映射地址的访问将导致段错误发生。如果进程修改了内存并映射了 MAP _ SHARED，那么修改应该首先写到文件中。Munmap 调用可能只覆盖 mmap-ed 区域的一部分，但是您可以假定它将在开始、结束或整个区域取消映射(<strong>但是不会在区域的中间打一个洞</strong>)。</p></li></ul></li><li><p>hints</p><ul><li><p>Start by adding <code>_mmaptest</code> to <code>UPROGS</code>, and <code>mmap</code> and <code>munmap</code> system calls, in order to get <code>user/mmaptest.c</code> to compile. For now, just return errors from <code>mmap</code> and <code>munmap</code>. We defined <code>PROT_READ</code> etc for you in <code>kernel/fcntl.h</code>. Run <code>mmaptest</code>, which will fail at the first mmap call.（配置好mmaptest.c，和mmap、munmap系统调用）</p></li><li><p>Fill in the page table lazily, in response to page faults. That is, <code>mmap</code> should not allocate physical memory or read the file. Instead, do that in page fault handling code in (or called by) <code>usertrap</code>, as in the lazy page allocation lab. The reason to be lazy is to ensure that <code>mmap</code> of a large file is fast, and that <code>mmap</code> of a file larger than physical memory is possible.（和lazy的实验一样，采用惰性分配）</p></li><li><p>Keep track of what <code>mmap</code> has mapped for each process. Define a structure corresponding to the VMA (virtual memory area) described in Lecture 15, recording the address, length, permissions, file, etc. for a virtual memory range created by <code>mmap</code>. Since the xv6 kernel doesn’t have a memory allocator in the kernel, it’s OK to declare a fixed-size array of VMAs and allocate from that array as needed. A size of 16 should be sufficient.（跟踪 mmap 为每个进程映射的内容。定义一个与VMA (虚拟内存区域)相对应的结构，记录 mmap 创建的虚拟内存范围的地址、长度、权限、文件等。数组长度可设为16）</p></li><li><p>Implement <code>mmap</code>: find an unused region in the process’s address space in which to map the file, and add a VMA to the process’s table of mapped regions. The VMA should contain a pointer to a <code>struct file</code> for the file being mapped; <code>mmap</code> should increase the file’s reference count so that the structure doesn’t disappear when the file is closed (hint: see <code>filedup</code>). Run <code>mmaptest</code>: the first <code>mmap</code> should succeed, but the first access to the mmap-ed memory will cause a page fault and kill <code>mmaptest</code>.</p></li><li><p>Add code to cause a page-fault in a mmap-ed region to allocate a page of physical memory, read 4096 bytes of the relevant file into that page, and map it into the user address space. Read the file with <code>readi</code>, which takes an offset argument at which to read in the file (but you will have to lock/unlock the inode passed to <code>readi</code>). Don’t forget to set the permissions correctly on the page. Run <code>mmaptest</code>; it should get to the first <code>munmap</code>.</p><p>添加代码以导致 mmap-ed 区域中的页错误，从而分配一页物理内存，将相关文件的4096字节读入该页，并将其映射到用户地址空间。使用 readi 读取文件，它接受一个要读入文件的偏移量参数(但是您必须锁定/解锁传递给 readi 的 inode)。不要忘记正确设置页面上的权限。运行 mmaptest; 它应该到达第一个 munmap。</p></li><li><p>Implement <code>munmap</code>: find the VMA for the address range and unmap the specified pages (hint: use <code>uvmunmap</code>). If <code>munmap</code> removes all pages of a previous <code>mmap</code>, it should decrement the reference count of the corresponding <code>struct file</code>. If an unmapped page has been modified and the file is mapped <code>MAP_SHARED</code>, write the page back to the file. Look at <code>filewrite</code> for inspiration.</p><p>实现 munmap: 找到地址范围的 VMA 并取消映射指定的页面(提示: 使用 uvmunmap)。如果 munmap 删除了一个 mmap 的所有页面，那么它应该递减相应结构文件的引用计数。如果一个未映射的页面已被修改，并且该文件已被映射为 MAP _ SHARED，则将该页面写回该文件。从filewrite中寻找灵感。</p></li><li><p>Ideally your implementation would only write back <code>MAP_SHARED</code> pages that the program actually modified. The dirty bit (<code>D</code>) in the RISC-V PTE indicates whether a page has been written. However, <code>mmaptest</code> does not check that non-dirty pages are not written back; thus you can get away with writing pages back without looking at <code>D</code> bits.</p><p>理想情况下，您的实现将只写回程序实际修改过的 MAP _ SHARED 页面。RISC-V PTE 中的脏位(D)表示页是否已被写入。然而，mmaptest 不检查非脏页面是否没有被写回; 因此您可以不查看 D 位就可以写回页面。</p></li><li><p>Modify <code>exit</code> to unmap the process’s mapped regions as if <code>munmap</code> had been called. Run <code>mmaptest</code>; <code>mmap_test</code> should pass, but probably not <code>fork_test</code>.</p><p>exit时，取消一个进程所有vma的所有区域的映射</p></li><li><p>Modify <code>fork</code> to ensure that the child has the same mapped regions as the parent. Don’t forget to increment the reference count for a VMA’s <code>struct file</code>. In the page fault handler of the child, it is OK to allocate a new physical page instead of sharing a page with the parent. The latter would be cooler, but it would require more implementation work. Run <code>mmaptest</code>; it should pass both <code>mmap_test</code> and <code>fork_test</code>.</p><p>为子进程同步父进程所有vma的所有区域的映射, 类似mmap，同时注意文件引用计数</p></li></ul></li><li><p>步骤：</p><ul><li>配置好mmaptest.c，和mmap、munmap系统调用</li><li>声明结构体VMA，以其为元素声明长度为16的数组，在进程控制块增加p-&gt;curmax用于记录最高空间地址；p-&gt;vmalist用于记录该进程中对mmap的各条记录</li><li>创建辅助函数<ul><li>initvma</li><li>allocvma</li><li>deallocvma</li></ul></li><li>完成mmap系统调用：<ul><li><a href="https://xiayingp.gitbook.io/build_a_os/labs/untitled#how-to-determine-vma-start-and-end-address">How to determine VMA start and end address</a></li><li><img src="image-20221024160039840.png" alt="image-20221024160039840"></li></ul></li><li>由于惰性分配，处理页面错误</li><li>完成munmap系统调用：</li><li>完成fork中子进程同步父进程的vma（注意文件引用计数）</li><li>完成exit中vma解除映射（注意文件引用计数）</li></ul></li><li><p><img src="image-20221216133907508.png" alt="image-20221216133907508"></p></li></ul><h2 id="Book">Book</h2><h3 id="调度的一部分总结（sleep-and-wakeup）">调度的一部分总结（sleep and wakeup）</h3><p><a href="http://xv6.dgs.zone/tranlate_books/book-riscv-rev1/c7/s5.html">调度</a></p><p><img src="image-20221213112534209.png" alt="image-20221213112534209"></p><h3 id="操作inode的过程">操作inode的过程</h3><ul><li>ip = iget(dev, inum)<ul><li>获取内存inode，引用次数加1，此时inode可能还未从磁盘读取。（多个进程可以持有指向<code>iget</code>返回的inode的C指针，但一次只能有一个进程锁定inode）</li></ul></li><li>ilock(ip)<ul><li>为ip上睡眠锁，若inode.valid为0，则从磁盘读取inode到ip</li></ul></li><li>… examine and modify ip-&gt;xxx …</li><li>iunlock(ip)<ul><li>为ip解除睡眠锁</li></ul></li><li>iput(ip)<ul><li>引用次数减1，如果是最后一次引用，且没有链接指向inode，则释放inode（在磁盘上）。itrunc()清理(将文件截断为0字节，同时释放各块)、iupdate()写回磁盘</li><li><code>iput()</code>不会在文件的链接计数降至零时立即截断文件，因为某些进程可能仍在内存中保留对inode的引用。这可能导致磁盘上存在links为0，但却已被分配（type不为0）的文件。xv6没有解决这个问题，可能会导致磁盘空间不足</li></ul></li></ul><h4 id="其它函数">其它函数</h4><ul><li><code>struct inode*ialloc(uint dev, short type)</code>：Allocate an inode on device dev.Mark it as allocated by  giving it type type.Returns an unlocked but allocated and referenced inode<ul><li><code>ialloc</code>的正确操作取决于这样一个事实：一次只有一个进程可以保存对<code>bp</code>的引用：<code>ialloc</code>可以确保其他进程不会同时看到inode可用并尝试声明它</li></ul></li><li><code>bmap(struct inode *ip, uint bn)</code>返回索引结点<code>ip</code>的第<code>bn</code>个数据块的磁盘块号。如果<code>ip</code>还没有这样的块，<code>bmap</code>会分配一个</li><li><code>int readi(struct inode *ip, int user_dst, uint64 dst, uint off, uint n)</code>：Read data from inode . Caller must hold ip-&gt;lock. If user_dst==1, then dst is a user virtual address; otherwise, dst is a kernel address.</li><li><code>int writei(struct inode *ip, int user_src, uint64 src, uint off, uint n)</code>：Write data to inode. Caller must hold ip-&gt;lock. If user_src==1, then src is a user virtual address; otherwise, src is a kernel address. Returns the number of bytes successfully written. If the return value is less than the requested n, there was an error of some kind.</li><li>函数<code>stati</code>（*<strong>kernel/fs.c*</strong>:442）将inode元数据复制到<code>stat</code>结构体中，该结构通过<code>stat</code>系统调用向用户程序公开</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>labs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/01/14/hello-world/"/>
    <url>/2023/01/14/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
